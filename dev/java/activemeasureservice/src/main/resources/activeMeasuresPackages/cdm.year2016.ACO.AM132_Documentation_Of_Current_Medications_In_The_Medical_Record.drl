package net.ahm.activemeasure.cdm.year2016.ACO.AM132_Documentation_Of_Current_Medications_In_The_Medical_Record

import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import net.ahm.careengine.domain.member.Gender
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.bom.clinical.HieMood
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.ruleengine.DateTimeUnit
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.domain.event.adt.BaseAdmissionDischardTransferEvent
import org.joda.time.LocalDate
import net.ahm.careengine.domain.temporal.ContiguousDays
import net.ahm.careengine.domain.measures.active.FactLevelMeasureNumerator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureDenominator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months3BeforeMeasurementEndDate
global java.util.Date months1BeforeMeasurementEndDate
global java.util.Date measurementStartDate
global net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder factLevelMeasureBuilder





















rule "DENOM_EXCL_DIAG_8843"
	dialect "mvel"
	when
		$flm : FactLevelMeasureDenominator( measureId == 132 , $primaryFact : primaryOriginationFact != null )
		$denomEvent : ProcedureEvent( $denomStartDate : startDate != null , $denomEndDate : endDate != null ) from $primaryFact
		DiagnosticEvent( startDate == $denomStartDate , endDate == $denomEndDate , elements contains 8843 )
	then
		$flm.setExcludedFromDenominator( true );
end


rule "DENOM_EXCL_PROC_8842"
	dialect "mvel"
	when
		$flm : FactLevelMeasureDenominator( measureId == 132 , $primaryFact : primaryOriginationFact != null )
		$denomEvent : ProcedureEvent( $denomStartDate : startDate != null , $denomEndDate : endDate != null ) from $primaryFact
		ProcedureEvent( this != $denomEvent , startDate == $denomStartDate , endDate == $denomEndDate , elements contains 8842 )
	then
		$flm.setExcludedFromDenominator( true );
end


rule "NUM_INCL_PROC_7939"
	dialect "mvel"
	when
		 $flmd : FactLevelMeasureDenominator( measureId == 132 , $primaryFact : primaryOriginationFact != null )
		 ProcedureEvent( $denomEndDate : endDate != null , $denomStartDate : startDate != null ) from $primaryFact
		 $numFact : ProcedureEvent( this != $primaryFact , startDate == $denomStartDate , endDate == $denomEndDate , elements contains 7939 )
	then
		FactLevelMeasureNumerator flmNumerator = $flmd.createFactLevelMeasureNumeratorWithPrimaryFact($numFact); insert(flmNumerator);
end


rule "DENOM_PROC_MED_REC_OUTPT_ ENCOUNTER"
	dialect "mvel"
	when
		 ActiveMeasuresMemberInfo( ageAtMeasurementEndDate >= 18 )
		 $procedureEvent : ProcedureEvent( endDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate , elements contains 7934 )
	then
		FactLevelMeasureDenominator flmDenominator= factLevelMeasureBuilder.newFactLevelMeasureDenominatorWithPrimaryFact(132, $procedureEvent); insert(flmDenominator)
end




