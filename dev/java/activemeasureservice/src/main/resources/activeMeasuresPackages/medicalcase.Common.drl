package net.ahm.activemeasure.medicalcase.Common

import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import net.ahm.careengine.domain.member.Gender
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.bom.clinical.HieMood
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.ruleengine.DateTimeUnit
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.domain.event.adt.BaseAdmissionDischardTransferEvent
import org.joda.time.LocalDate
import net.ahm.careengine.domain.temporal.ContiguousDays
import net.ahm.careengine.domain.measures.active.FactLevelMeasureNumerator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureDenominator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder
import net.ahm.careengine.domain.medicalcase.MedicalCase
import net.ahm.careengine.domain.medicalcase.MedicalCaseProviderInfo
import net.ahm.careengine.domain.medicalcase.MedicalCaseClaim
import net.ahm.careengine.domain.medicalcase.MedicalCaseClaimDiagnosis
import net.ahm.careengine.domain.medicalcase.MedicalCaseAffiliation
import net.ahm.careengine.domain.temporal.ContiguousDaysExpressable

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months3BeforeMeasurementEndDate
global java.util.Date months1BeforeMeasurementEndDate
global java.util.Date measurementStartDate
global net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder factLevelMeasureBuilder


rule "COMMON_INELIGIBLE_2_DAY_GAP_IN_MEDICAL_OVERLAPPING_PRIMARY_FACT"
	dialect "mvel"
	when
		 $flmd : FactLevelMeasureDenominator( measureId in ( 84, 85, 86, 159 ) , $primaryFact : primaryOriginationFact != null )
		 $eventDays : ContiguousDaysExpressable( ) from $primaryFact
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  1 ) from collect ( ContiguousDays( durationInDays >=  2) from GlobalFunctions.allIntersectingButNotAdjacent( $initialGapDays2, $eventDays ))
	then
		 $flmd.setEligible( false );
end
















rule "COMMON_DENOM_EXCL_MEDICAl_CASE_PAYMENT_CD"
	dialect "mvel"
	when
		$flmDenom : FactLevelMeasureDenominator( measureId in ( 84, 157, 85, 86, 159, 160 ) , $primaryOrigEvent : primaryOriginationFact)
		MedicalCase( medicalCasePaymentCode == "D"  || == "X" ) from $primaryOrigEvent
	then
		$flmDenom.setExcludedFromDenominator( true );
end


rule "COMMON_DENOM_EXCL_LOS_COUNT_GR_THAN_OUTLIER_LOS_COUNT"
	dialect "mvel"
	when
		$flDenom : FactLevelMeasureDenominator( measureId in ( 84, 157, 85, 86, 159 ) , $primaryOriginEvent : primaryOriginationFact != null )
		$medicalcase : MedicalCase( outlierLOSDayCount != null  && > 0 , lengthOfStayDayCount != null  && > 0 , this == $primaryOriginEvent , lengthOfStayDayCount >= $medicalcase.outlierLOSDayCount )
	then
		$flDenom.setExcludedFromDenominator( true );
end


rule "COMMON_DENOM_EXCL_AGE_LESS_THAN_1"
	dialect "mvel"
	when
		 $flmDenom : FactLevelMeasureDenominator( $primaryOrigEvent : primaryOriginationFact != null , measureId in ( 84, 157, 85, 86, 159, 160 ) )
		 $amInfo : ActiveMeasuresMemberInfo( gender != null , $birthDate : birthDate != null )
		$year1AfterBD : java.util.Date() from GlobalFunctions.getLaterDate($birthDate, 1, DateTimeUnit.YEAR)
		 $mcPrimaryOrigEvent : MedicalCase( this == $primaryOrigEvent , medicalCaseStartDate < ( $year1AfterBD  ) )
	then
		 $flmDenom.setExcludedFromDenominator( true );
end


rule "COMMON_DENOM_EXCL_TRANSPLANT_CODES"
	dialect "mvel"
	when
		$flmDenom : FactLevelMeasureDenominator( measureId in ( 157, 159 ) , $primaryOrigEvent : primaryOriginationFact != null )
		$medicalCase : MedicalCase( this == $primaryOrigEvent , diagnosisRelatedGroupElements contains 9243 )
	then
		$flmDenom.setExcludedFromDenominator( true );
end


