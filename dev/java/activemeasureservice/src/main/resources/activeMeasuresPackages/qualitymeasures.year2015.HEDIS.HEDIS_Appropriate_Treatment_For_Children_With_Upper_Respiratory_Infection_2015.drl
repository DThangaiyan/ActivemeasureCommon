package net.ahm.activemeasure.qualitymeasures.year2015.HEDIS.HEDIS_Appropriate_Treatment_For_Children_With_Upper_Respiratory_Infection_2015

import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.member.GenderSelection
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import net.ahm.careengine.domain.member.Gender
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.ruleengine.DateTimeUnit
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.event.CodifiedEvent
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.domain.classifier.Classifier
import net.ahm.careengine.domain.classifier.ClassifierBuilder
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.util.CEDateUtil
import net.ahm.careengine.util.Month
import net.ahm.careengine.domain.temporal.ContiguousDaysExpressable
import net.ahm.careengine.domain.temporal.ContiguousDays
import net.ahm.careengine.domain.fact.ClassifiedFact

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months27BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
global java.util.Date months6BeforeMeasurementEndDate
global java.util.Date years3BeforeMeasurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureClassifierBuilder classifierBuilder












rule "NUM_ABSENCE_OF_ANTIBITIC_OR_BRONCHITIS_DRUG"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 50 )
		$day3AfterIndexDate : java.util.Date() from GlobalFunctions.getLaterDate($am.getAlternateEndDate(), 3, DateTimeUnit.DAY)
		 not (DrugEvent( elements contains 5972 , endDate <= ( $day3AfterIndexDate ) , endDate > ( $am.getAlternateEndDate() ) )) 
	then
		$am.setInNumerator(true)
end


rule "DENOM_EXCL_PDD_QM_QA_HOSPITAL_ADMIT"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 50 )
		 PatientDerivedEvent( elements contains 8903 , endDate <= measurementEndDate , endDate >= months12BeforeMeasurementEndDate )
	then
		$am.setExcludedFromDenominator(true)
end


rule "DENOM_EXCL_PDD_QM_QA_NO_URI"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 50 )
		 PatientDerivedEvent( elements contains 8902 , endDate <= measurementEndDate , endDate >= months12BeforeMeasurementEndDate )
	then
		$am.setExcludedFromDenominator(true)
end


rule "DENOM_EXCL_PDD_URI_AND_OTHER_DX_WITH_ABX"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 50 )
		 PatientDerivedEvent( elements contains 8901 , endDate <= measurementEndDate , endDate >= months12BeforeMeasurementEndDate )
	then
		$am.setExcludedFromDenominator(true)
end


rule "NUM_PDD_QM_QA_URI_ONLY_AND_NO_ABX"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 50 )
		 PatientDerivedEvent( elements contains 8900 , endDate <= measurementEndDate , endDate >= months12BeforeMeasurementEndDate )
	then
		$am.setInNumerator(true)
end






rule "DENOM_LABEL_CHILDREN_WITH_UPPER_RESPIRATORY_INFECTION_CLASSIFIER114"
	salience 100
	dialect "mvel"
	when
		$intakeStartDate : java.util.Date() from GlobalFunctions.startDayOfRangeEndingOn(measurementEndDate, 18, DateTimeUnit.MONTH)
		$intakeEndDate : java.util.Date() from GlobalFunctions.getEarlierDate(measurementEndDate, 6, DateTimeUnit.MONTH)
		$dobMax : java.util.Date() from GlobalFunctions.getEarlierDate($intakeStartDate, 3, DateTimeUnit.MONTH)
		$dobMin : java.util.Date() from GlobalFunctions.getEarlierDate($intakeEndDate, 19, DateTimeUnit.YEAR)
		 $am : ActiveMeasuresMemberInfo( birthDate <= ( $dobMax )  && > ( $dobMin ) , gender != null )
		 $uriDiagnosis : DiagnosticEvent( elements contains 4796 , endDate <= ( $intakeEndDate )  && <= ( measurementEndDate ) , endDate >= ( $intakeStartDate ) )
		 $uriDx : java.util.Collection( ) from collect ( DiagnosticEvent( elements contains 4796 , endDate <= ( $intakeEndDate )  && <= ( measurementEndDate ) , endDate >= ( $intakeStartDate ) )) 
		 $procs : java.util.Collection( ) from collect ( ProcedureEvent( elements contains 5902 , endDate <= ( $intakeEndDate )  && <= ( measurementEndDate ) , endDate >= ( $intakeStartDate ) )) 
net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext(); 		noOverlap : java.util.Collection(size ==  0) from collect (OverlappedEvents() from(GlobalFunctions.getOverlappedEventsAnytimeInPast($uriDx, 0, DateTimeUnit.DAY, true, 1,DateTimeUnit.DAY, measurementEndDate, $procs)))
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 5986 , endDate <= ( $intakeEndDate )  && <= ( measurementEndDate ) , endDate >= ( $intakeStartDate ) , endDate >= ( $uriDiagnosis.getContiguousDays().getStart() ) , endDate <= ( $uriDiagnosis.getContiguousDays().getEnd() ) )) 
		$day30PriorIndexEventDate : java.util.Date() from GlobalFunctions.startDayOfRangeEndingOn($uriDiagnosis.getContiguousDays().getStart(), 31, DateTimeUnit.DAY)
		$day3AfterIndexEventDate : java.util.Date() from GlobalFunctions.getLaterDate($uriDiagnosis.getContiguousDays().getStart(), 3, DateTimeUnit.DAY)
		 not (DrugEvent( elements contains 5972 , endDate <= ( $uriDiagnosis.getContiguousDays().getStart() )  && <= ( measurementEndDate ) , endDate >= ( $day30PriorIndexEventDate ) )) 
		 not (DiagnosticEvent( elements contains 4798 , endDate <= ( $day3AfterIndexEventDate )  && <= ( measurementEndDate ) , endDate >= ( $uriDiagnosis.getContiguousDays().getStart() ) )) 
		 not (DiagnosticEvent( elements excludes 4796 , elements excludes 4798 , endDate <= ( $intakeEndDate )  && <= ( measurementEndDate ) , endDate >= ( $intakeStartDate ) )) 
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size ==  0 ) from collect ( ContiguousDays( durationInDays >=  1) from GlobalFunctions.filterWholeDays( $initialGapDays2, $day30PriorIndexEventDate, $day3AfterIndexEventDate ) )
		MemberInfo ( $initialGapDays3 : pharmacyEnrollmentGapDays ); java.util.Collection( size ==  0 ) from collect ( ContiguousDays( durationInDays >=  1) from GlobalFunctions.filterWholeDays( $initialGapDays3, $day30PriorIndexEventDate, $day3AfterIndexEventDate ) )
	then
		Classifier classifier = classifierBuilder.getClassifierForQualityMeasure(114); insert(classifier); ClassifiedFact classifiedFact = classifierBuilder.getClassifiedFactForQualityMeasure(classifier, $uriDiagnosis ); insert(classifiedFact);
end


rule "DENOM_CHILDREN_WITH_URI"
	dialect "mvel"
	when
		 $classifier : Classifier( id == 114 )
		 DiagnosticEvent( $endDate : endDate) from accumulate ( ClassifiedFact( classifier == $classifier , $event : event != null ),
			firstEvent($event)) 
	then
		ActiveMeasure mam = activeMeasureBuilder.newActiveMeasureWithAlternateEndDate(50 , $endDate); insert(mam)
end




