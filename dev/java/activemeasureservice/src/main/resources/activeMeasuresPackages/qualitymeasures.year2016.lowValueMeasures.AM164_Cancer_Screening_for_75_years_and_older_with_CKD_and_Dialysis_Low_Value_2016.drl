package net.ahm.activemeasure.qualitymeasures.year2016.lowValueMeasures.AM164_Cancer_Screening_for_75_years_and_older_with_CKD_and_Dialysis_Low_Value_2016

import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import net.ahm.careengine.domain.member.Gender
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.bom.clinical.HieMood
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.ruleengine.DateTimeUnit
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.domain.event.adt.BaseAdmissionDischardTransferEvent
import org.joda.time.LocalDate
import net.ahm.careengine.domain.temporal.ContiguousDays
import net.ahm.careengine.domain.measures.active.FactLevelMeasureNumerator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureDenominator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder
import net.ahm.careengine.domain.classifier.Classifier

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months3BeforeMeasurementEndDate
global java.util.Date months1BeforeMeasurementEndDate
global java.util.Date measurementStartDate
global net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder factLevelMeasureBuilder




















rule "AM164_DENOM_EXCL_ABSENCE_OF_BREASTS"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 8934 , startDate <= measurementEndDate )) 
		 java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 8935 , startDate <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM164_DENOM_EXCL_UNI_LEFT_AND_RIGHT_MASTECTOMY"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 8937 , startDate <= measurementEndDate )) 
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 8938 , startDate <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM164_DENOM_EXCL_TWO_PROC_8933"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 $procedures : java.util.Collection( size >= 2 ) from collect ( ProcedureEvent( elements contains 8933 , endDate <= measurementEndDate )) 
		java.util.Collection(size >=  2) from collect (Event() from(GlobalFunctions.removeTooCloseEvents($procedures, 14, DateTimeUnit.DAY)))
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM164_DENOM_EXCL_9343"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 9343 , startDate <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM164_DENOM1"
	dialect "mvel"
	when
		 ActiveMeasuresMemberInfo( ageAtMeasurementEndDate >= 75 )
		 java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 9338 , startDate <= measurementEndDate  && >= months24BeforeMeasurementEndDate )) 
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 9386 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
		 java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 9002 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
	then
		ActiveMeasure mam = activeMeasureBuilder.newActiveMeasure(164); insert(mam)
end


rule "AM164_DENOM2"
	dialect "mvel"
	when
		 ActiveMeasuresMemberInfo( ageAtMeasurementEndDate >= 75 )
		 java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 9338 , startDate <= measurementEndDate  && >= months24BeforeMeasurementEndDate )) 
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 9386 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 9003 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
	then
		ActiveMeasure mam = activeMeasureBuilder.newActiveMeasure(164); insert(mam)
end


rule "AM164_DENOM_EXCL_9341"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 9341 , startDate <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM164_DENOM_EXCL_9342"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 9342 , startDate <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM164_NUM_PROC_5950"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 5950 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_NUM_PROC_5948"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 5948 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_NUM_PROC_6105"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 6105 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_NUM_PROC_5951"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 5951 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_NUM_PROC_8440"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 8440 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_NUM_LAB_5949"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( LabEvent( elements contains 5949 , startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_NUM_LAB_8699"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( LabEvent( elements contains 8699 , startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_NUM_LAB_8441"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( LabEvent( elements contains 8441 , startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_NUM_DX_6106"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 6106 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_NUM_9344"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 9344 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_NUM_9347"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 9347 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_NUM_9345"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( LabEvent( elements contains 9345 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_NUM_9348"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( LabEvent( elements contains 9348 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
	then
		$am.setInNumerator(true)
end


rule "AM164_DENOM_EXCL_UNI_MASTECTOMY"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 8444 , startDate <= measurementEndDate )) 
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 8443 , startDate <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM164_DENOM_EXCL_PROC_5945"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 5945 , startDate <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM164_DENOM_EXCL_PROC_6112"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 6112 , startDate <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM164_DENOM_EXCL_PROC_6113"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 6113 , startDate <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM164_DENOM_EXCL_DX_5946"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 5946 , startDate <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM164_DENOM_EXCL_DX_8936"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 164)
		 java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 8936 , startDate <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


