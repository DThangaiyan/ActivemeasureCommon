package net.ahm.activemeasure.qualitymeasures.year2017.HEDIS.AM196_HEDIS_Childhood_Immunization_Status_VZV_2017

import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.ruleengine.DateTimeUnit
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.domain.classifier.Classifier
import net.ahm.careengine.domain.classifier.ClassifierBuilder
import net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder
import net.ahm.careengine.domain.measures.active.ActiveMeasureClassifierBuilder

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureClassifierBuilder classifierBuilder
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date months6BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months27BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
















rule "AM196_DENOM_EXCL_DX_6079"
	dialect "mvel"
	when
		$am : ActiveMeasure( measureId == 196 )
		DiagnosticEvent( elements contains 6079 , startDate <= measurementEndDate )
	then
		$am.setExcludedFromDenominator( true );
end


rule "AM196_DENOM"
	dialect "mvel"
	when
		 ActiveMeasuresMemberInfo( ageAtMeasurementEndDate >= 2  && < 3 , $Dob : birthDate != null , gender != null )
		$year2AfterDob : java.util.Date() from GlobalFunctions.getLaterDate($Dob, 2, DateTimeUnit.YEAR)
	then
		ActiveMeasure mam = (activeMeasureBuilder.newActiveMeasureWithAlternateStartDate(196 , $year2AfterDob)); insert(mam)
end


rule "AM196_DENOM_EXCL_DX_6082"
	dialect "mvel"
	when
		$am : ActiveMeasure( measureId == 196 )
		DiagnosticEvent( elements contains 6082 , startDate <= measurementEndDate )
	then
		$am.setExcludedFromDenominator( true );
end


rule "AM196_NUM_DX_2603"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 196)
		 DiagnosticEvent( elements contains 2603 , startDate <= measurementEndDate )
	then
		$am.setInNumerator(true)
end


rule "AM196_NUM_PROC_2604"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 196)
		 ProcedureEvent( elements contains 2604 , startDate <= ( $am.getAlternateStartDate() )  && <= ( measurementEndDate ) )
	then
		$am.setInNumerator(true)
end


rule "AM196_NUM_DRUG_9442"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 196)
		 DrugEvent( elements contains 9442 , startDate <= ( $am.getAlternateStartDate() )  && <= measurementEndDate )
	then
		$am.setInNumerator(true)
end


rule "AM196_NUM_PROC_6094_DX_6096"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 197)
		 java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 6094 , startDate <= ( $am.getAlternateStartDate() )  && <= measurementEndDate )) 
		 java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 6096 , startDate <= measurementEndDate )) 
	then
		$am.setInNumerator(true)
end


