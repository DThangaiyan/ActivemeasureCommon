package net.ahm.activemeasure.qualitymeasures.year2017.HEDIS.AM210_Immunization_for_Adolescents_Tdap_2017

import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.ruleengine.DateTimeUnit
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.domain.classifier.Classifier
import net.ahm.careengine.domain.classifier.ClassifierBuilder
import net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder
import net.ahm.careengine.domain.measures.active.ActiveMeasureClassifierBuilder

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureClassifierBuilder classifierBuilder
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date months6BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months27BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
















rule "AM210_DENOM"
	dialect "mvel"
	when
		 ActiveMeasuresMemberInfo( ageAtMeasurementEndDate >= 13  && < 14 , $Dob : birthDate != null )
	then
		ActiveMeasure mam = (activeMeasureBuilder.newActiveMeasureWithAlternateStartDate(210 , $Dob)); insert(mam)
end


rule "AM210_DENOM_EXCL_DX_6082"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 210)
		$13yearAfterBirth : java.util.Date() from GlobalFunctions.getLaterDate($am.getAlternateStartDate(), 13, DateTimeUnit.YEAR)
		 $proc : java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 6082 , startDate <= ( $13yearAfterBirth )  && <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM210_DENOM_EXCL_DX_6085"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 210)
		 $proc : java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 6085 , startDate <= measurementEndDate )) 
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM210_NUM_PROC_4319"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 210)
		$10yearAfterBirth : java.util.Date() from GlobalFunctions.getLaterDate($am.getAlternateStartDate(), 10, DateTimeUnit.YEAR)
		$13yearAfterBirth : java.util.Date() from GlobalFunctions.getLaterDate($am.getAlternateStartDate(), 13, DateTimeUnit.YEAR)
		 $proc : java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 4319 , startDate <= ( $13yearAfterBirth )  && <= measurementEndDate  && >= ( $10yearAfterBirth ) )) 
	then
		$am.setInNumerator(true)
end


rule "AM210_NUM_RX_9478"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 210)
		$10yearAfterBirth : java.util.Date() from GlobalFunctions.getLaterDate($am.getAlternateStartDate(), 10, DateTimeUnit.YEAR)
		$13yearAfterBirth : java.util.Date() from GlobalFunctions.getLaterDate($am.getAlternateStartDate(), 13, DateTimeUnit.YEAR)
		 $Rx : java.util.Collection( empty == false ) from collect ( DrugEvent( elements contains 9478 , startDate <= ( $13yearAfterBirth )  && <= measurementEndDate  && >= ( $10yearAfterBirth ) )) 
	then
		$am.setInNumerator(true)
end


