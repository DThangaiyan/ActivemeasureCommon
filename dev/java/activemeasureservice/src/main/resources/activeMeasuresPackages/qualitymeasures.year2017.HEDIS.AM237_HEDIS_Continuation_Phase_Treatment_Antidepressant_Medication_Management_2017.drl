package net.ahm.activemeasure.qualitymeasures.year2017.HEDIS.AM237_HEDIS_Continuation_Phase_Treatment_Antidepressant_Medication_Management_2017

import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.member.GenderSelection
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import net.ahm.careengine.domain.member.Gender
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.ruleengine.DateTimeUnit
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.event.CodifiedEvent
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.domain.classifier.Classifier
import net.ahm.careengine.domain.classifier.ClassifierBuilder
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.util.CEDateUtil
import net.ahm.careengine.util.Month
import net.ahm.careengine.domain.event.claim.ClaimLabResultInfo
import net.ahm.careengine.domain.event.claim.ClaimBaseInfo
import net.ahm.careengine.domain.event.claim.ClaimLabInfo
import net.ahm.careengine.domain.event.claim.ClaimDiagnosticInfo
import net.ahm.careengine.domain.event.claim.ClaimProcedureInfo
import net.ahm.careengine.domain.event.claim.ClaimDrugInfo

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months27BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
global java.util.Date months6BeforeMeasurementEndDate
global java.util.Date years3BeforeMeasurementEndDate













rule "AM237_DENOM_EXCL_ACUTE_PHASE_TREATMENT"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 237 )
		$priorToIPSD : java.util.Date() from GlobalFunctions.getEarlierDate($am.getAlternateStartDate(), 105, DateTimeUnit.DAY)
		 DrugEvent( elements contains 1868 , endDate >= ( $priorToIPSD ) , endDate < ( $am.getAlternateStartDate() ) )
	then
		 $am.setExcludedFromDenominator( true );
end


rule "AM237_DENOM_PROC_5873_OR_8906"
	dialect "mvel"
	when
		$April30MsYr : java.util.Date() from GlobalFunctions.getEarlierDate(measurementEndDate, 8, DateTimeUnit.MONTH)
		$min18Dob : java.util.Date() from GlobalFunctions.getEarlierDate($April30MsYr, 18, DateTimeUnit.YEAR)
		$intakePeriodStartDate : java.util.Date() from GlobalFunctions.startDayOfRangeEndingOn(measurementEndDate, 20, DateTimeUnit.MONTH)
		$intakePeriodEndDate : java.util.Date() from GlobalFunctions.getEarlierDate(measurementEndDate, 8, DateTimeUnit.MONTH)
		 ActiveMeasuresMemberInfo( birthDate <= ( $min18Dob ) )
		 $earliestDrugEvent : DrugEvent( $IESD : endDate >= ( $intakePeriodStartDate )  && <= ( $intakePeriodEndDate ) , elements contains 1868 )
		 not (DrugEvent( elements contains 1868 , endDate < $IESD , this != $earliestDrugEvent , endDate >= ( $intakePeriodStartDate )  && <= ( $intakePeriodEndDate ) )) 
		$60daysBeforeIESD : java.util.Date() from GlobalFunctions.getEarlierDate($IESD, 60, DateTimeUnit.DAY)
		$60daysAfterIESD : java.util.Date() from GlobalFunctions.getLaterDate($IESD, 60, DateTimeUnit.DAY)
		 $primaryEvent : java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 8568 , endDate <= ( $60daysAfterIESD )  && >= ( $60daysBeforeIESD ) )) 
		 $secEvent : java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 8906  || contains 5873 , endDate <= ( $60daysAfterIESD )  && >= ( $60daysBeforeIESD ) )) 
net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext(); 		overlap : java.util.Collection(size >=  1) from collect (OverlappedEvents() from(GlobalFunctions.getOverlappedEvents($primaryEvent, 0, DateTimeUnit.DAY, true, 1,DateTimeUnit.DAY, GlobalFunctions.startDayOfRangeEndingOn(measurementEndDate, 24, DateTimeUnit.MONTH), measurementEndDate, $secEvent)))
	then
		ActiveMeasure mam = (activeMeasureBuilder.newActiveMeasureWithAlternateStartDate(237 , $IESD)); insert(mam)
end


rule "AM237_DENOM_PROC_8927_ADMISSION_DATE"
	dialect "mvel"
	when
		$April30MsYr : java.util.Date() from GlobalFunctions.getEarlierDate(measurementEndDate, 8, DateTimeUnit.MONTH)
		$min18Dob : java.util.Date() from GlobalFunctions.getEarlierDate($April30MsYr, 18, DateTimeUnit.YEAR)
		$intakePeriodStartDate : java.util.Date() from GlobalFunctions.startDayOfRangeEndingOn(measurementEndDate, 20, DateTimeUnit.MONTH)
		$intakePeriodEndDate : java.util.Date() from GlobalFunctions.getEarlierDate(measurementEndDate, 8, DateTimeUnit.MONTH)
		 ActiveMeasuresMemberInfo( birthDate <= ( $min18Dob ) )
		 $earliestDrugEvent : DrugEvent( $IESD : endDate >= ( $intakePeriodStartDate )  && <= ( $intakePeriodEndDate ) , elements contains 1868 )
		 not (DrugEvent( elements contains 1868 , endDate < $IESD , this != $earliestDrugEvent , endDate >= ( $intakePeriodStartDate )  && <= ( $intakePeriodEndDate ) )) 
		$60daysBeforeIESD : java.util.Date() from GlobalFunctions.getEarlierDate($IESD, 60, DateTimeUnit.DAY)
		$60daysAfterIESD : java.util.Date() from GlobalFunctions.getLaterDate($IESD, 60, DateTimeUnit.DAY)
		 $primaryEvent : java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 8568 , endDate <= ( $60daysAfterIESD )  && >= ( $60daysBeforeIESD ) )) 
		 $secEvent : java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 8927 , startDate <= ( $60daysAfterIESD )  && >= ( $60daysBeforeIESD ) )) 
net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext(); 		overlap : java.util.Collection(size >=  1) from collect (OverlappedEvents() from(GlobalFunctions.getOverlappedEvents($primaryEvent, 0, DateTimeUnit.DAY, true, 1,DateTimeUnit.DAY, GlobalFunctions.startDayOfRangeEndingOn(measurementEndDate, 24, DateTimeUnit.MONTH), measurementEndDate, $secEvent)))
	then
		ActiveMeasure mam = (activeMeasureBuilder.newActiveMeasureWithAlternateStartDate(237 , $IESD)); insert(mam)
end


rule "AM237_DENOM_PROC_8927_DISCHARGE_DATE"
	dialect "mvel"
	when
		$April30MsYr : java.util.Date() from GlobalFunctions.getEarlierDate(measurementEndDate, 8, DateTimeUnit.MONTH)
		$min18Dob : java.util.Date() from GlobalFunctions.getEarlierDate($April30MsYr, 18, DateTimeUnit.YEAR)
		$intakePeriodStartDate : java.util.Date() from GlobalFunctions.startDayOfRangeEndingOn(measurementEndDate, 20, DateTimeUnit.MONTH)
		$intakePeriodEndDate : java.util.Date() from GlobalFunctions.getEarlierDate(measurementEndDate, 8, DateTimeUnit.MONTH)
		 ActiveMeasuresMemberInfo( birthDate <= ( $min18Dob ) )
		 $earliestDrugEvent : DrugEvent( $IESD : endDate >= ( $intakePeriodStartDate )  && <= ( $intakePeriodEndDate ) , elements contains 1868 )
		 not (DrugEvent( elements contains 1868 , endDate < $IESD , this != $earliestDrugEvent , endDate >= ( $intakePeriodStartDate )  && <= ( $intakePeriodEndDate ) )) 
		$60daysBeforeIESD : java.util.Date() from GlobalFunctions.getEarlierDate($IESD, 60, DateTimeUnit.DAY)
		$60daysAfterIESD : java.util.Date() from GlobalFunctions.getLaterDate($IESD, 60, DateTimeUnit.DAY)
		 $primaryEvent : java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 8568 , endDate <= ( $60daysAfterIESD )  && >= ( $60daysBeforeIESD ) )) 
		 $secEvent : java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 8927 , endDate <= ( $60daysAfterIESD )  && >= ( $60daysBeforeIESD ) )) 
net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext(); 		overlap : java.util.Collection(size >=  1) from collect (OverlappedEvents() from(GlobalFunctions.getOverlappedEvents($primaryEvent, 0, DateTimeUnit.DAY, true, 1,DateTimeUnit.DAY, GlobalFunctions.startDayOfRangeEndingOn(measurementEndDate, 24, DateTimeUnit.MONTH), measurementEndDate, $secEvent)))
	then
		ActiveMeasure mam = (activeMeasureBuilder.newActiveMeasureWithAlternateStartDate(237 , $IESD)); insert(mam)
end


rule "AM237_NUM_ACUTE_PHASE_TREATMENT"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 237 )
		$231DaysAfterIPSDIncludingIPSD : java.util.Date() from GlobalFunctions.getLaterDate($am.getAlternateStartDate(), 231, DateTimeUnit.DAY)
		 $drugSup : java.util.Collection( ) from collect ( DrugEvent( elements contains 1868 , startDate <= ( $231DaysAfterIPSDIncludingIPSD ) , daysSupplyEndDate >= ( $am.getAlternateStartDate() ) )) 
		net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext(); java.lang.Number(intValue >=  180) from (GlobalFunctions.getTotalDaysSupplyOfDrugs($drugSup,$am.getAlternateStartDate(),$231DaysAfterIPSDIncludingIPSD))
	then
		 $am.setInNumerator( true );
end


rule "AM237_DENOM_PROC_8964_POS"
	dialect "mvel"
	when
		$April30MsYr : java.util.Date() from GlobalFunctions.getEarlierDate(measurementEndDate, 8, DateTimeUnit.MONTH)
		$min18Dob : java.util.Date() from GlobalFunctions.getEarlierDate($April30MsYr, 18, DateTimeUnit.YEAR)
		$intakePeriodStartDate : java.util.Date() from GlobalFunctions.startDayOfRangeEndingOn(measurementEndDate, 20, DateTimeUnit.MONTH)
		$intakePeriodEndDate : java.util.Date() from GlobalFunctions.getEarlierDate(measurementEndDate, 8, DateTimeUnit.MONTH)
		 ActiveMeasuresMemberInfo( birthDate <= ( $min18Dob ) )
		 $earliestDrugEvent : DrugEvent( $IESD : endDate >= ( $intakePeriodStartDate )  && <= ( $intakePeriodEndDate ) , elements contains 1868 )
		 not (DrugEvent( elements contains 1868 , endDate < $IESD , this != $earliestDrugEvent , endDate >= ( $intakePeriodStartDate )  && <= ( $intakePeriodEndDate ) )) 
		$60daysBeforeIESD : java.util.Date() from GlobalFunctions.getEarlierDate($IESD, 60, DateTimeUnit.DAY)
		$60daysAfterIESD : java.util.Date() from GlobalFunctions.getLaterDate($IESD, 60, DateTimeUnit.DAY)
		 $primaryEvent : java.util.Collection( empty == false ) from collect ( DiagnosticEvent( elements contains 8568 , endDate <= ( $60daysAfterIESD )  && >= ( $60daysBeforeIESD ) )) 
		 $secEvent : java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 8964 , startDate <= ( $60daysAfterIESD )  && >= ( $60daysBeforeIESD ) , claimInfo != null , claimInfo.placeOfService in ( "3", "5", "7", "9", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "22", "24", "33", "49", "50", "52", "53", "71", "72" ) )) 
net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext(); 		overlap : java.util.Collection(size >=  1) from collect (OverlappedEvents() from(GlobalFunctions.getOverlappedEvents($primaryEvent, 0, DateTimeUnit.DAY, true, 1,DateTimeUnit.DAY, GlobalFunctions.startDayOfRangeEndingOn(measurementEndDate, 24, DateTimeUnit.MONTH), measurementEndDate, $secEvent)))
	then
		ActiveMeasure mam = (activeMeasureBuilder.newActiveMeasureWithAlternateStartDate(237 , $IESD)); insert(mam)
end


