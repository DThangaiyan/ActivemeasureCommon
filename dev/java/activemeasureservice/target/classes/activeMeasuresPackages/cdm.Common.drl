package net.ahm.activemeasure.cdm.Common

import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import net.ahm.careengine.domain.member.Gender
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.util.OverlappedEvents
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.bom.clinical.HieMood
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.ruleengine.DateTimeUnit
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.domain.event.adt.BaseAdmissionDischardTransferEvent
import org.joda.time.LocalDate
import net.ahm.careengine.domain.temporal.ContiguousDays
import net.ahm.careengine.domain.measures.active.FactLevelMeasureNumerator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureDenominator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder
import net.ahm.careengine.domain.event.claim.ClaimBaseInfo
import net.ahm.careengine.domain.event.claim.ClaimDiagnosticInfo
import net.ahm.careengine.domain.event.claim.ClaimLabResultInfo
import net.ahm.careengine.domain.event.claim.ClaimLabInfo
import net.ahm.careengine.domain.event.claim.ClaimProcedureInfo
import net.ahm.careengine.domain.event.claim.ClaimDrugInfo
import net.ahm.careengine.domain.classifier.Classifier
import net.ahm.careengine.domain.classifier.ClassifierBuilder
import net.ahm.careengine.domain.fact.ClassifiedFact
import net.ahm.careengine.domain.comorbidclinicalcondition.AgeGenderWeights
import net.ahm.careengine.domain.eligibility.PlanEligibility
import net.ahm.careengine.function.BiFunction
import net.ahm.careengine.domain.event.LatestEventAccumulationFunction
import net.ahm.careengine.common.ChunkIterator
import net.ahm.careengine.domain.comorbidclinicalcondition.CalculateHCCRankAndCombination.SharedHCCRankTable
import net.ahm.careengine.bom.clinical.HieSectionType
import net.ahm.careengine.function.BiConsumer
import net.ahm.careengine.function.Function
import net.ahm.careengine.domain.provider.ProviderAssignation
import net.ahm.careengine.command.CommandIF
import net.ahm.careengine.domain.measures.active.FactLevelMeasureHolder
import net.ahm.careengine.domain.event.clinical.HieDiagnosticInfo
import net.ahm.careengine.util.CommonGlobalFunctions
import net.ahm.careengine.domain.feedback.Feedback.FeedbackReferenceType
import net.ahm.careengine.bom.clinical.HieSource
import net.ahm.careengine.domain.impl.temporal.DayImpl
import net.ahm.careengine.domain.comorbidclinicalcondition.SurgeryWeights
import net.ahm.careengine.util.Month
import net.ahm.careengine.domain.event.EventStartDateComparator
import net.ahm.careengine.domain.temporal.ContiguousDaysExpressableComparator
import net.ahm.careengine.domain.comorbidclinicalcondition.CalculateHCCWeights
import net.ahm.careengine.bom.Operator.EXResponse
import net.ahm.careengine.bom.clinical.HieProblemLevel
import net.ahm.careengine.domain.event.clinical.HieDrugInfo
import net.ahm.careengine.domain.impl.temporal.ContiguousDaysImpl
import net.ahm.careengine.domain.medicalcase.MedicalCaseAffiliation
import net.ahm.careengine.domain.comorbidclinicalcondition.CalculateHCCRankAndCombination.SharedHCCComobinationTable
import net.ahm.careengine.domain.mhs.MemberStateProviderIF
import net.ahm.careengine.domain.mhs.MemberHealthStateIF
import net.ahm.careengine.event.adt.model.AdmissionSource
import net.ahm.careengine.function.impl.NullSafeToStringFunction
import net.ahm.careengine.domain.temporal.TemporalUtil
import net.ahm.careengine.domain.justification.RuleJustification
import net.ahm.careengine.domain.provider.CareProvider
import net.ahm.careengine.domain.event.EventEndDateComparator
import net.ahm.careengine.domain.temporal.Span
import net.ahm.careengine.domain.comorbidclinicalcondition.RiskStratificationMeasureWeightsBuilder
import net.ahm.careengine.domain.impl.temporal.BaseTemporalImpl
import net.ahm.careengine.bom.mhs.ClinicalReviewStatus
import net.ahm.careengine.domain.member.MhsMemberProfile
import net.ahm.careengine.util.ThreadLocalSimpleDateFormat
import net.ahm.careengine.domain.eligibility.CoverageType
import net.ahm.careengine.domain.temporal.ContiguousDaysExpressable
import net.ahm.careengine.domain.event.financial.FinancialClaimEvent
import net.ahm.careengine.function.Predicate
import net.ahm.careengine.domain.event.FirstEventAccumulationFunction
import net.ahm.careengine.domain.temporal.BaseTemporal
import net.ahm.careengine.domain.medicalcase.Intervaled
import net.ahm.careengine.domain.event.clinical.HieLabOrgInfo
import net.ahm.careengine.domain.event.EventCodeWithModifiers
import net.ahm.careengine.domain.event.casemgmt.CaseManagementBaseInfo
import net.ahm.careengine.domain.measures.active.MeasureRelated
import net.ahm.careengine.domain.comorbidclinicalcondition.RiskStratificationMeasures
import net.ahm.careengine.domain.member.MemberProfile
import net.ahm.careengine.domain.comorbidclinicalcondition.HierarchicalClinicalConditionCategoryBuilder
import net.ahm.careengine.domain.medicalcase.MedicalCase
import net.ahm.careengine.command.CommandConfigurationIF
import net.ahm.careengine.domain.findings.MeasureFinding
import net.ahm.careengine.domain.medicalcase.MedicalCaseClaim
import net.ahm.careengine.domain.comorbidclinicalcondition.CalculateAgeGenderWeights
import net.ahm.careengine.domain.measures.active.ActiveMeasureClassifierBuilder
import net.ahm.careengine.bom.Operator.NBTResponse
import net.ahm.careengine.domain.geolocation.GeographicDetailsBuilder
import net.ahm.careengine.bom.mhs.Severity
import net.ahm.careengine.event.adt.model.AdmissionType
import net.ahm.careengine.domain.event.clinical.HieLabResultInfo
import net.ahm.careengine.bom.EventDateIF
import net.ahm.careengine.util.UUIDGenerator
import net.ahm.careengine.domain.comorbidclinicalcondition.CalculateSurgeryWeights
import net.ahm.careengine.domain.comorbidclinicalcondition.ComorbidClinicalConditionCategory
import net.ahm.careengine.domain.event.drug.DrugDispensingEvent
import net.ahm.careengine.domain.event.drug.DrugClassCode
import net.ahm.careengine.domain.event.CodifiedEvent
import net.ahm.careengine.bom.clinical.HieMedicalEncounterType
import net.ahm.careengine.domain.event.claim.PreAuthorizationCaseEvent
import net.ahm.careengine.event.adt.model.AdmitStatus
import net.ahm.careengine.domain.measures.active.ActiveMeasureHolder
import net.ahm.careengine.bom.Operator.GTResponse
import net.ahm.careengine.domain.fact.Fact
import net.ahm.careengine.bom.mhs.HealthProfileApplicabilityType
import net.ahm.careengine.bom.Operator.LEResponse
import net.ahm.careengine.domain.event.HistoryBasedEvent
import net.ahm.careengine.bom.clinical.HieData
import net.ahm.careengine.bom.CERunDateRelativeIF
import net.ahm.careengine.domain.mhs.MemberRecommendationCompliance
import net.ahm.careengine.domain.member.BusinessLineCode
import net.ahm.careengine.util.SimpleProfilerUtil.Profile
import net.ahm.careengine.domain.event.EventSourceType
import net.ahm.careengine.bom.clinical.ProcedureStatus
import net.ahm.careengine.bom.mhs.MemberHealthProfileType
import net.ahm.careengine.event.adt.model.PatientClass
import net.ahm.careengine.domain.findings.MeasureFindingObjectFactory
import net.ahm.careengine.domain.justification.Justifiable
import net.ahm.careengine.bom.clinical.HieLabStatus
import net.ahm.careengine.domain.fact.NamespaceToFactLocator
import net.ahm.careengine.bom.ClaimSourceType
import net.ahm.careengine.bom.Operator.GEResponse
import net.ahm.careengine.domain.event.FirstEventFromEndDateAccumulationFunction
import net.ahm.careengine.util.SimpleProfilerUtil
import net.ahm.careengine.bom.mhs.HealthStatus
import net.ahm.careengine.bean.PropertyChangeListenable
import net.ahm.careengine.domain.temporal.SpanComparator
import net.ahm.careengine.domain.event.casemgmt.CaseManagementDiagnosticInfo
import net.ahm.careengine.bom.clinical.HieProblemPhase
import net.ahm.careengine.domain.event.clinical.HieAllergyInfo
import net.ahm.careengine.domain.findings.DenomFinding
import net.ahm.careengine.domain.comorbidclinicalcondition.RiskStratificationMeasureType
import net.ahm.careengine.domain.medicalcase.MedicalCaseProviderInfo
import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.medicalcase.MedicalCaseClaimDiagnosis
import net.ahm.careengine.domain.event.casemgmt.CaseManagementProcedureInfo
import net.ahm.careengine.common.CECollectionsUtil
import net.ahm.careengine.bom.mhs.ProductFindingType
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandInputIF
import net.ahm.careengine.domain.temporal.Temporal
import net.ahm.careengine.bom.Operator.NMBTResponse
import net.ahm.careengine.domain.comorbidclinicalcondition.CalculateCCWeights
import net.ahm.careengine.domain.findings.Finding
import net.ahm.careengine.function.impl.NotPredicate
import net.ahm.careengine.bom.clinical.HieProblemStatus
import net.ahm.careengine.util.CEDateUtil
import net.ahm.careengine.bom.clinical.HieProblemType
import net.ahm.careengine.domain.event.ImprovedEventStartDateComparator
import net.ahm.careengine.bom.member.event.claim.ClaimType
import net.ahm.careengine.domain.event.LatestEventFromEndDateAccumulationFunction
import net.ahm.careengine.domain.event.EventType
import net.ahm.careengine.domain.fact.InferredFact
import net.ahm.careengine.domain.findings.DenomExclusionFinding
import net.ahm.careengine.bom.response.IResponse
import net.ahm.careengine.util.StringUtilities
import net.ahm.careengine.domain.temporal.Day
import net.ahm.careengine.domain.member.GenderSelection
import net.ahm.careengine.domain.event.clinical.HieBaseInfo
import net.ahm.careengine.domain.temporal.BaseTemporalImplExpressable
import net.ahm.careengine.common.Constants
import net.ahm.careengine.domain.event.EventCode
import net.ahm.careengine.domain.temporal.BaseTemporalImplExpressableComparator
import net.ahm.careengine.domain.findings.NumeratorCompletionFinding
import net.ahm.careengine.domain.temporal.FilteredTemporals
import net.ahm.careengine.function.Consumer
import net.ahm.careengine.function.UnaryOperator
import net.ahm.careengine.domain.provider.MemberProviderRelation
import net.ahm.careengine.function.BiPredicate
import net.ahm.careengine.domain.geolocation.GeographicDetails
import net.ahm.careengine.domain.event.lab.LabOrgEvent
import net.ahm.careengine.function.Supplier
import net.ahm.careengine.bom.Operator
import net.ahm.careengine.bom.Operator.BTResponse
import net.ahm.careengine.command.CommandContextIF
import net.ahm.careengine.domain.event.allergy.AllergyEvent
import net.ahm.careengine.domain.event.clinical.HieProcedureInfo
import net.ahm.careengine.bom.member.event.pd.PatientDerivedEventType
import net.ahm.careengine.domain.event.drug.DrugGNICode
import net.ahm.careengine.bom.clinical.HieDrugStatus
import net.ahm.careengine.domain.event.Label
import net.ahm.careengine.bom.adt.AdmitService
import net.ahm.careengine.bom.Operator.EQResponse
import net.ahm.careengine.domain.comorbidclinicalcondition.CCWeights
import net.ahm.careengine.util.BaseCommonGlobalFunctions
import net.ahm.careengine.command.CommandOutputIF
import net.ahm.careengine.domain.event.drug.DrugGTICode
import net.ahm.careengine.domain.event.clinical.HieLabInfo
import net.ahm.careengine.domain.event.ImprovedEventEndDateComparator
import net.ahm.careengine.domain.comorbidclinicalcondition.CalculateHCCRankAndCombination
import net.ahm.careengine.bom.Operator.LTResponse
import net.ahm.careengine.domain.event.pdd.PatientDerivedDrugInfo
import net.ahm.careengine.domain.comorbidclinicalcondition.HierarchicalClinicalConditionCategory
import net.ahm.careengine.domain.findings.NumeratorComplianceFinding
import net.ahm.careengine.bom.mhs.MedicalFindingType
import net.ahm.careengine.bom.Operator.MBTResponse
import net.ahm.careengine.domain.comorbidclinicalcondition.HCCWeights

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months3BeforeMeasurementEndDate
global java.util.Date months1BeforeMeasurementEndDate
global java.util.Date measurementStartDate
global net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder factLevelMeasureBuilder
global net.ahm.careengine.domain.measures.active.ActiveMeasureClassifierBuilder classifierBuilder












rule "COMMON_DENOM_EXCL_PROC_HOSPICE"
	dialect "mvel"
	when
		$flmDenom : FactLevelMeasureDenominator( measureId in ( 125, 129, 130, 131, 126, 127, 132, 128 ) )
		ProcedureEvent( elements contains 2675 , endDate <= measurementEndDate , endDate >= months12BeforeMeasurementEndDate )
	then
		$flmDenom.setExcludedFromDenominator( true );
end


rule "COMMON_DENOM_EXCL_DIAG_HOSPICE"
	dialect "mvel"
	when
		$flmDenom : FactLevelMeasureDenominator( measureId in ( 125, 129, 130, 131, 126, 127, 132, 128 ) )
		DiagnosticEvent( elements contains 8300 , startDate >= months12BeforeMeasurementEndDate , startDate <= measurementEndDate )
	then
		$flmDenom.setExcludedFromDenominator( true );
end


rule "COMMON_DENOM_EXCL_DIAG_ESRD"
	dialect "mvel"
	when
		$flmDenom : FactLevelMeasureDenominator( measureId in ( 126, 127 ) , primaryOriginationFact != null )
		DiagnosticEvent( elements contains 8123 , endDate <= measurementEndDate )
	then
		$flmDenom.setExcludedFromDenominator( true );
end


rule "COMMON_NUM_EXCL_ANY_PROC_POTENTIAL_PLANNED_EXCL_AND_NOT_PRINCIPAL_DIAG_ACUTE_DIAGNOSIS"
	dialect "mvel"
	when
		$flmNum : FactLevelMeasureNumerator( measureId in ( 129, 130 ) , $primaryOrigFact : primaryFact != null )
		ClaimHeader( principalDiagnosisElements excludes 7940 , relatedProcedureEventElements contains 8831 ) from $primaryOrigFact
	then
		$flmNum.setExcludedFromNumerator( true );
end


rule "COMMON_NUM_EXCL_PRINCIPAL_DIAG_PLANNED_EXCL_OR_PLANNED_PREG_DELIVERY_EXCL"
	dialect "mvel"
	when
		$flmNum : FactLevelMeasureNumerator( measureId in ( 129, 130, 128 ) , $primaryOrigFact : primaryFact != null )
		ClaimHeader( principalDiagnosisElements contains 8815  || contains 8836 ) from $primaryOrigFact
	then
		$flmNum.setExcludedFromNumerator( true );
end


rule "COMMON_NUM_EXCL_ADMISSION_FROM_ANOTHER_FACILITY"
	dialect "mvel"
	when
		$flmNum : FactLevelMeasureNumerator( measureId in ( 126, 127 ) , $primaryOrigFact : primaryFact != null )
		ClaimHeader( admissionSourceCode in ( "4", "5", "6" ) ) from $primaryOrigFact
	then
		$flmNum.setExcludedFromNumerator( true );
end


rule "COMMON_DENOM_EXCL_PRINCIPAL_DIAG_CANCER_PSYCH_REHAB_OR_PROSTHESES_FROM_INDEX_EVENT"
	dialect "mvel"
	when
		$flmDenom : FactLevelMeasureDenominator( measureId in ( 125, 128 ) , $primaryFact : primaryOriginationFact != null )
		ClaimHeader( principalDiagnosisElements contains 7935  || contains 7936  || contains 7937 ) from $primaryFact
	then
		$flmDenom.setExcludedFromDenominator( true );
end


rule "COMMON_DENOM_EXCL_ADMISSION_DIAG_CANCER_PSYCH_REHAB_OR_PROSTHESES_FROM_INDEX_EVENT"
	dialect "mvel"
	when
		$flmDenom : FactLevelMeasureDenominator( measureId in ( 125, 128 ) , $primaryFact : primaryOriginationFact != null )
		ClaimHeader( admitDiagnosisElements contains 7935  || contains 7936  || contains 7937 ) from $primaryFact
	then
		$flmDenom.setExcludedFromDenominator( true );
end


rule "COMMON_CDM_ELIGIBLE_ALIVE_IN_MS_PERIOD"
	dialect "mvel"
	when
		$flmd : FactLevelMeasureDenominator( measureId in ( 129, 130, 131, 127, 126 ) )
		ActiveMeasuresMemberInfo( deceasedDate != null , deceasedDate <= ( measurementEndDate ) )
	then
		$flmd.setEligible( true );
end


rule "COMMON_CDM_INELIGIBILITY_1GAP_1DAY_IN_PAST_2YRS_FROM_MS_YR"
	dialect "mvel"
	when
		 $flmDenom : FactLevelMeasureDenominator( measureId in ( 129, 131 ) )
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  1 ) from collect ( ContiguousDays( durationInDays >=  1) from GlobalFunctions.filterWholeDays( $initialGapDays2, GlobalFunctions.startDayOfRangeEndingOn( measurementEndDate, 24, DateTimeUnit.MONTH ) , measurementEndDate ) )
	then
		 $flmDenom.setEligible( false );
end


rule "COMMON_CDM_INELIGIBILITY_1GAP_1DAY_IN_MS_YR"
	dialect "mvel"
	when
		 $flmDenom : FactLevelMeasureDenominator( measureId in ( 130, 127, 126 ) )
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  1 ) from collect ( ContiguousDays( durationInDays >=  1) from GlobalFunctions.filterWholeDays( $initialGapDays2, GlobalFunctions.startDayOfRangeEndingOn( measurementEndDate, 12, DateTimeUnit.MONTH ) , measurementEndDate ) )
	then
		 $flmDenom.setEligible( false );
end


rule "COMMON_NUM_EXCL_ANY_PROC_PLANNED_EXCL_7938_OR_PLANNED_PREG_DELIVERY_EXCL_8825"
	dialect "mvel"
	when
		$flmNum : FactLevelMeasureNumerator( measureId in ( 129, 130, 128 ) , $primaryOrigFact : primaryFact != null )
		ClaimHeader( relatedProcedureEventElements contains 7938  || contains 8825 ) from $primaryOrigFact
	then
		$flmNum.setExcludedFromNumerator( true );
end


rule "COMMON_CDM_INELIGIBILITY_1GAP_1DAY_IN_12MO_PRIOR_AND_30DAYS_AFTER_INDEX_EVENT"
	dialect "mvel"
	when
		 $flmDenom : FactLevelMeasureDenominator( measureId in ( 125, 128 ) , $primaryFact : primaryOriginationFact != null )
		 ClaimHeader( $initialDischarge : endDate != null , $admissionDate : startDate != null ) from $primaryFact
		$12MonthsBeforeAdmission : java.util.Date() from GlobalFunctions.getEarlierDate($admissionDate, 12, DateTimeUnit.MONTH)
		$1monthAfterDischarge : java.util.Date() from GlobalFunctions.getLaterDate($initialDischarge, 1, DateTimeUnit.MONTH)
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  1 ) from collect ( ContiguousDays( durationInDays >=  1) from GlobalFunctions.filterWholeDays( $initialGapDays2, $12MonthsBeforeAdmission, $1monthAfterDischarge ) )
	then
		 $flmDenom.setEligible( false );
end


rule "COMMON_CDM_ELIGIBLE_ALIVE_1_MONTH_AFTER_INDEX_DISCHARGE_DATE"
	dialect "mvel"
	when
		 $am : FactLevelMeasureDenominator( measureId in ( 125, 128 ) , $primaryFact : primaryOriginationFact != null )
		 ClaimHeader( $indexDischargeDate : endDate != null ) from $primaryFact
		$1monthAfterIndexDischarge : java.util.Date() from GlobalFunctions.getLaterDate($indexDischargeDate, 1, DateTimeUnit.MONTH)
		 ActiveMeasuresMemberInfo( deceasedDate != null , deceasedDate <= ( $1monthAfterIndexDischarge ) )
	then
		 $am.setEligible( false );
end






rule "COMMON_FACT_LEVEL_MEASURE_DENOM_EXCL_PROC_HOSPICE_2675"
	dialect "mvel"
	when
		$flmDenom : FactLevelMeasureDenominator( measureId in ( 161, 189, 233, 220, 234, 221, 235, 222, 211 ) )
		java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 2675 , endDate <= measurementEndDate , endDate >= months12BeforeMeasurementEndDate )) 
	then
		$flmDenom.setExcludedFromDenominator( true );
end


rule "COMMON_UTILIZATION_INELIGIBLE_GAP_46_DAYS_OR_MORE_IN_1YR_BEFORE_MS_END_DATE"
	dialect "mvel"
	when
		 $am : FactLevelMeasureDenominator( measureId in ( 161, 189, 233, 220, 234, 221, 235, 222 ) )
		$1YearPriorToMSEndDate : java.util.Date() from GlobalFunctions.getEarlierDate(measurementEndDate, 1, DateTimeUnit.YEAR)
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  1 ) from collect ( ContiguousDays( durationInDays >=  46) from GlobalFunctions.filterWholeDays( $initialGapDays2, GlobalFunctions.startDayOfRangeEndingOn( $1YearPriorToMSEndDate, 1, DateTimeUnit.YEAR ) , $1YearPriorToMSEndDate ) )
	then
		 $am.setEligible( false );
end


rule "COMMON_UTILIZATION_INELIGIBLE_GAP_46_DAYS_OR_MORE_IN_MS_YR"
	dialect "mvel"
	when
		 $am : FactLevelMeasureDenominator( measureId in ( 161, 189, 233, 220, 234, 221, 235, 222 ) )
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  1 ) from collect ( ContiguousDays( durationInDays >=  46) from GlobalFunctions.filterWholeDays( $initialGapDays2, GlobalFunctions.startDayOfRangeEndingOn( measurementEndDate, 1, DateTimeUnit.YEAR ) , measurementEndDate ) )
	then
		 $am.setEligible( false );
end


rule "COMMON_UTILIZATION_INELIGIBLE_MULTIPLE_GAPS_1DAY_OR_MORE_IN_1YR_BEFORE_MS_END_DATE"
	dialect "mvel"
	when
		 $am : FactLevelMeasureDenominator( measureId in ( 161, 189, 233, 220, 234, 221, 235, 222 ) )
		$1YearPriorToMSEndDate : java.util.Date() from GlobalFunctions.getEarlierDate(measurementEndDate, 1, DateTimeUnit.YEAR)
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  2 ) from collect ( ContiguousDays( durationInDays >=  1) from GlobalFunctions.filterWholeDays( $initialGapDays2, GlobalFunctions.startDayOfRangeEndingOn( $1YearPriorToMSEndDate, 1, DateTimeUnit.YEAR ) , $1YearPriorToMSEndDate ) )
	then
		 $am.setEligible( false );
end


rule "COMMON_UTILIZATION_INELIGIBLE_MULTIPLE_GAPS_1DAY_OR_MORE_IN_MS_YR"
	dialect "mvel"
	when
		 $am : FactLevelMeasureDenominator( measureId in ( 161, 189, 233, 220, 234, 221, 235, 222 ) )
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  2 ) from collect ( ContiguousDays( durationInDays >=  1) from GlobalFunctions.filterWholeDays( $initialGapDays2, GlobalFunctions.startDayOfRangeEndingOn( measurementEndDate, 1, DateTimeUnit.YEAR ) , measurementEndDate ) )
	then
		 $am.setEligible( false );
end


rule "INPATIENT_HOSPITAL_UTILIZATION_VISIT_COUNT_DENOM_EXCL_DEATH_IN_STAY"
	dialect "mvel"
	when
		$fld : FactLevelMeasureDenominator( measureId in ( 233, 220, 234, 221, 235, 222, 211 ) , $primaryFact : primaryOriginationFact != null )
		BaseAdmissionDischardTransferEvent( dischargeDisposition == DischargeDispositionStatus.CD_20 ) from $primaryFact
	then
		$fld.setExcludedFromDenominator( true );
end


rule "COMMON_UTILIZATION_INELIGIBLE_GAP_46DAYS_OR_MORE_IN_1_YR_BEFORE_INDEX_DISCHARGE_DATE"
	dialect "mvel"
	when
		 $am : FactLevelMeasureDenominator( measureId == 211 , $fact : primaryOriginationFact != null )
		 BaseAdmissionDischardTransferEvent( $dischargeDate : rawEndDate != null ) from $fact
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  1 ) from collect ( ContiguousDays( durationInDays >=  46) from GlobalFunctions.filterWholeDays( $initialGapDays2, GlobalFunctions.startDayOfRangeEndingOn( $dischargeDate, 1, DateTimeUnit.YEAR ) , $dischargeDate ) )
	then
		 $am.setEligible( false );
end


rule "COMMON_UTILIZATION_INELIGIBLE_GAP_46_DAYS_OR_MORE_DURING_365DAYS_BEFORE_INDEX_DISCHARGE_DATE"
	dialect "mvel"
	when
		 $flmDenom : FactLevelMeasureDenominator( measureId in ( 125, 128 ) , $primaryFact : primaryOriginationFact != null )
		 BaseAdmissionDischardTransferEvent( $dischargeDate : rawEndDate != null ) from $primaryFact
		$365DaysBeforeDischarge : java.util.Date() from GlobalFunctions.getEarlierDate($dischargeDate, 365, DateTimeUnit.DAY)
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  1 ) from collect ( ContiguousDays( durationInDays >=  46) from GlobalFunctions.filterWholeDays( $initialGapDays2, $365DaysBeforeDischarge, $dischargeDate ) )
	then
		 $flmDenom.setEligible( false );
end


rule "COMMON_UTILIZATION_INELIGIBLE_MULTIPLE_GAPS_1DAY_OR_MORE_DURING_365DAYS_BEFORE_INDEX_DISCHARGE_DATE"
	dialect "mvel"
	when
		 $flmDenom : FactLevelMeasureDenominator( measureId in ( 125, 128 ) , $primaryFact : primaryOriginationFact != null )
		 BaseAdmissionDischardTransferEvent( $dischargeDate : rawEndDate != null ) from $primaryFact
		$365DaysBeforeDischarge : java.util.Date() from GlobalFunctions.getEarlierDate($dischargeDate, 365, DateTimeUnit.DAY)
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  2 ) from collect ( ContiguousDays( durationInDays >=  1) from GlobalFunctions.filterWholeDays( $initialGapDays2, $365DaysBeforeDischarge, $dischargeDate ) )
	then
		 $flmDenom.setEligible( false );
end


rule "COMMON_UTILIZATION_INELIGIBLE_MULTIPLE_GAPS_1DAY_OR_MORE_IN_1_YR_BEFORE_INDEX_DISCHARGE_DATE"
	dialect "mvel"
	when
		 $am : FactLevelMeasureDenominator( measureId == 211 , $fact : primaryOriginationFact != null )
		 BaseAdmissionDischardTransferEvent( $dischargeDate : rawEndDate != null ) from $fact
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  2 ) from collect ( ContiguousDays( durationInDays >=  1) from GlobalFunctions.filterWholeDays( $initialGapDays2, GlobalFunctions.startDayOfRangeEndingOn( $dischargeDate, 1, DateTimeUnit.YEAR ) , $dischargeDate ) )
	then
		 $am.setEligible( false );
end


rule "COMMON_UTILIZATION_INELIGIBLE_NO_GAP_IN_30_DAYS_AFTER_INDEX_DISCHARGE_DATE"
	dialect "mvel"
	when
		 $am : FactLevelMeasureDenominator( measureId == 211 , $fact : primaryOriginationFact != null )
		 BaseAdmissionDischardTransferEvent( $dischargeDate : rawEndDate != null ) from $fact
		$30daysAfter : java.util.Date() from GlobalFunctions.getLaterDate($dischargeDate, 30, DateTimeUnit.DAY)
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  1 ) from collect ( ContiguousDays( durationInDays >=  1) from GlobalFunctions.filterWholeDays( $initialGapDays2, GlobalFunctions.startDayOfRangeEndingOn( $30daysAfter, 30, DateTimeUnit.DAY ) , $30daysAfter ) )
	then
		 $am.setEligible( false );
end


rule "COMMON_UTILIZATION_NO_GAP_DURING_30DAYS_AFTER_INDEX_DISCHARGE_DATE"
	dialect "mvel"
	when
		 $flmDenom : FactLevelMeasureDenominator( measureId in ( 125, 128 ) , $primaryFact : primaryOriginationFact != null )
		 BaseAdmissionDischardTransferEvent( $dischargeDate : rawEndDate != null ) from $primaryFact
		$30daysAfterDischarge : java.util.Date() from GlobalFunctions.getLaterDate($dischargeDate, 30, DateTimeUnit.DAY)
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size >=  1 ) from collect ( ContiguousDays( durationInDays >=  1) from GlobalFunctions.filterWholeDays( $initialGapDays2, $dischargeDate, $30daysAfterDischarge ) )
	then
		 $flmDenom.setEligible( false );
end


rule "INPATIENT_HOSPITAL_UTILIZATION_VISIT_COUNT_DENOM_EXCL_MS_DRG"
	dialect "mvel"
	when
		$fld : FactLevelMeasureDenominator( measureId in ( 233, 220, 234, 221, 235, 222 ) , $primaryFact : primaryOriginationFact != null )
		ClaimHeader( diagnosisRelatedGroupElements != null , diagnosisRelatedGroupElements contains 9434  || contains 9435  || contains 9436 ) from $primaryFact
	then
		$fld.setExcludedFromDenominator( true );
end


rule "INPATIENT_HOSPITAL_UTILIZATION_VISIT_COUNT_DENOM_EXCL_PRINCIPAL_DX"
	dialect "mvel"
	when
		$fld : FactLevelMeasureDenominator( measureId in ( 233, 220, 234, 221, 235, 222 ) , $primaryFact : primaryOriginationFact != null )
		BaseAdmissionDischardTransferEvent( principalDiagnosisElements contains 9126  || contains 9282  || contains 9283 ) from $primaryFact
	then
		$fld.setExcludedFromDenominator( true );
end


rule "INPATIENT_HOSPITAL_UTILIZATION_VISIT_COUNT_DENOM_EXCL_RELATED_PROC_9284"
	dialect "mvel"
	when
		$fld : FactLevelMeasureDenominator( measureId in ( 233, 220, 234, 221, 235, 222 ) , $primaryFact : primaryOriginationFact != null )
		BaseAdmissionDischardTransferEvent( relatedProcedureEventElements contains 9284 ) from $primaryFact
	then
		$fld.setExcludedFromDenominator( true );
end








rule "LABEL_AM189_NUM_ED_PROC_5873_CLASSIFIER_171"
	salience 100
	dialect "mvel"
	when
		 collection : java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 5873 , endDate <= measurementEndDate , endDate >= months12BeforeMeasurementEndDate )) 
net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext(); 		eachRemovedCloseEvent : Event(this != null) from(GlobalFunctions.removeTooCloseEvents(collection, 1, DateTimeUnit.DAY))
	then
		Classifier classifier = classifierBuilder.getClassifierForQualityMeasure(171); insert(classifier); ClassifiedFact classifiedFact = classifierBuilder.getClassifiedFactForQualityMeasure(classifier, eachRemovedCloseEvent ); insert(classifiedFact);
end




rule "LABEL_AM189_NUM_ED_PROC_9125_WITH_POS_23_CLASSIFIER_159"
	salience 100
	dialect "mvel"
	when
		 collection : java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 9125 , endDate <= measurementEndDate , endDate >= months12BeforeMeasurementEndDate , claimInfo != null , claimInfo.placeOfService == "23" )) 
net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext(); 		eachRemovedCloseEvent : Event(this != null) from(GlobalFunctions.removeTooCloseEvents(collection, 1, DateTimeUnit.DAY))
	then
		Classifier classifier = classifierBuilder.getClassifierForQualityMeasure(159); insert(classifier); ClassifiedFact classifiedFact = classifierBuilder.getClassifiedFactForQualityMeasure(classifier, eachRemovedCloseEvent ); insert(classifiedFact);
end


rule "LABEL_AM248_DENOM_DIRECT_TRANSFER_CLASSIFIER_191"
	salience 130
	dialect "mvel"
	when
		 $originalStay : BaseAdmissionDischardTransferEvent( relatedProcedureEventElements contains 9477 , $originalDischargeDate : rawEndDate != null , rawEndDate <= months1BeforeMeasurementEndDate , rawEndDate >= months12BeforeMeasurementEndDate , $startDate1 : startDate != null , rawEndDate > $startDate1 , dischargeDisposition != DischargeDispositionStatus.CD_20 , principalDiagnosisElements excludes 6200  && excludes 9292 )
		$1DayAfterFirstAdmission : java.util.Date() from GlobalFunctions.getLaterDate($originalDischargeDate, 1, DateTimeUnit.DAY)
		 $secondAdmission : BaseAdmissionDischardTransferEvent( $startDate2 : startDate <= ( $1DayAfterFirstAdmission ) , startDate >= ( $originalDischargeDate ) , relatedProcedureEventElements contains 9477 , $indexDischargeDate : rawEndDate != null , rawEndDate <= months1BeforeMeasurementEndDate , rawEndDate >= months12BeforeMeasurementEndDate , rawEndDate > $startDate2 , dischargeDisposition != DischargeDispositionStatus.CD_20 , principalDiagnosisElements excludes 6200  && excludes 9292 )
		$18yearsBeforeDischargeDate : java.util.Date() from GlobalFunctions.getEarlierDate($indexDischargeDate, 18, DateTimeUnit.YEAR)
		 ActiveMeasuresMemberInfo( birthDate <= ( $18yearsBeforeDischargeDate ) )
		$30daysAfterIndexDischargeDate : java.util.Date() from GlobalFunctions.getLaterDate($indexDischargeDate, 30, DateTimeUnit.DAY)
		$Jan3 : java.util.Date() from GlobalFunctions.getLaterDate(months12BeforeMeasurementEndDate, 2, DateTimeUnit.DAY)
		 not (BaseAdmissionDischardTransferEvent( $firstStartDate : startDate <= ( $30daysAfterIndexDischargeDate )  && > ( $indexDischargeDate ) , $firstDischargeDate : rawEndDate != null , rawEndDate <= measurementEndDate  && >= ( $Jan3 ) , principalDiagnosisElements contains 9421  || contains 9420 )) 
		 not (BaseAdmissionDischardTransferEvent( startDate <= ( $30daysAfterIndexDischargeDate )  && > ( $indexDischargeDate ) , rawEndDate != null , rawEndDate <= measurementEndDate  && >= ( $Jan3 ) , relatedProcedureEventElements contains 9417 )) 
		 not (BaseAdmissionDischardTransferEvent( startDate <= ( $30daysAfterIndexDischargeDate )  && > ( $indexDischargeDate ) , rawEndDate != null , rawEndDate <= measurementEndDate  && >= ( $Jan3 ) , relatedProcedureEventElements contains 9422 , principalDiagnosisElements excludes 9276 )) 
		 not (ProcedureEvent( elements contains 2675 , endDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size <=  1 ) from collect ( ContiguousDays( durationInDays <=  45) from GlobalFunctions.filterWholeDays( $initialGapDays2, GlobalFunctions.startDayOfRangeEndingOn( $indexDischargeDate, 1, DateTimeUnit.YEAR ) , $indexDischargeDate ) )
	then
		Classifier classifier = classifierBuilder.getClassifierForQualityMeasure(191); insert(classifier); ClassifiedFact classifiedFact = classifierBuilder.getClassifiedFactForQualityMeasure(classifier, $secondAdmission ); insert(classifiedFact);
end




rule "LABEL_AM248_DENOM_REGULAR_STAY_ENROLLMENT_1_YEAR_PRIOR_TO_INDEX_DATE_CLASSIFIER_193"
	salience 130
	dialect "mvel"
	when
		 $originalStay : BaseAdmissionDischardTransferEvent( relatedProcedureEventElements contains 9477 , $indexDischargeDate : rawEndDate != null , rawEndDate <= months1BeforeMeasurementEndDate , rawEndDate >= months12BeforeMeasurementEndDate , $startDate1 : startDate != null , rawEndDate > $startDate1 , dischargeDisposition != DischargeDispositionStatus.CD_20 , principalDiagnosisElements excludes 6200  && excludes 9292 )
		$1DayAfterFirstAdmission : java.util.Date() from GlobalFunctions.getLaterDate($indexDischargeDate, 1, DateTimeUnit.DAY)
		 not (BaseAdmissionDischardTransferEvent( startDate <= ( $1DayAfterFirstAdmission )  && >= ( $indexDischargeDate ) , relatedProcedureEventElements contains 9477 )) 
		$1dayBeforeAdmissionDate : java.util.Date() from GlobalFunctions.getEarlierDate($startDate1, 1, DateTimeUnit.DAY)
		 not (BaseAdmissionDischardTransferEvent( rawEndDate != null , rawEndDate >= ( $1dayBeforeAdmissionDate )  && <= ( $startDate1 ) , relatedProcedureEventElements contains 9477 )) 
		$18yearsBeforeDischargeDate : java.util.Date() from GlobalFunctions.getEarlierDate($indexDischargeDate, 18, DateTimeUnit.YEAR)
		 ActiveMeasuresMemberInfo( birthDate <= ( $18yearsBeforeDischargeDate ) )
		$30daysAfterIndexDischargeDate : java.util.Date() from GlobalFunctions.getLaterDate($indexDischargeDate, 30, DateTimeUnit.DAY)
		$Jan3 : java.util.Date() from GlobalFunctions.getLaterDate(months12BeforeMeasurementEndDate, 2, DateTimeUnit.DAY)
		 not (BaseAdmissionDischardTransferEvent( startDate <= ( $30daysAfterIndexDischargeDate )  && > ( $indexDischargeDate ) , rawEndDate != null , rawEndDate <= measurementEndDate  && >= ( $Jan3 ) , principalDiagnosisElements contains 9421  || contains 9420 )) 
		 not (BaseAdmissionDischardTransferEvent( startDate <= ( $30daysAfterIndexDischargeDate )  && > ( $indexDischargeDate ) , rawEndDate != null , rawEndDate <= measurementEndDate  && >= ( $Jan3 ) , relatedProcedureEventElements contains 9417 )) 
		 not (BaseAdmissionDischardTransferEvent( startDate <= ( $30daysAfterIndexDischargeDate )  && > ( $indexDischargeDate ) , rawEndDate != null , rawEndDate <= measurementEndDate  && >= ( $Jan3 ) , relatedProcedureEventElements contains 9422 , principalDiagnosisElements excludes 9276 )) 
		 not (ProcedureEvent( elements contains 2675 , endDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
		MemberInfo ( $initialGapDays2 : enrolmentGapDays ); java.util.Collection( size <=  1 ) from collect ( ContiguousDays( durationInDays <=  45) from GlobalFunctions.filterWholeDays( $initialGapDays2, GlobalFunctions.startDayOfRangeEndingOn( $indexDischargeDate, 1, DateTimeUnit.YEAR ) , $indexDischargeDate ) )
	then
		Classifier classifier = classifierBuilder.getClassifierForQualityMeasure(193); insert(classifier); ClassifiedFact classifiedFact = classifierBuilder.getClassifiedFactForQualityMeasure(classifier, $originalStay ); insert(classifiedFact);
end


