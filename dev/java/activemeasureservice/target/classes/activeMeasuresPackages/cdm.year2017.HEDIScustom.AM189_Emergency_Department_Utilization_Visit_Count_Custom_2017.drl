package net.ahm.activemeasure.cdm.year2017.HEDIScustom.AM189_Emergency_Department_Utilization_Visit_Count_Custom_2017

import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.member.GenderSelection
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import net.ahm.careengine.domain.member.Gender
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.ruleengine.DateTimeUnit
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.event.CodifiedEvent
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.domain.classifier.Classifier
import net.ahm.careengine.domain.classifier.ClassifierBuilder
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.util.CEDateUtil
import net.ahm.careengine.domain.temporal.TemporalUtil
import net.ahm.careengine.util.Month
import net.ahm.careengine.domain.event.claim.ClaimLabResultInfo
import net.ahm.careengine.domain.event.claim.ClaimBaseInfo
import net.ahm.careengine.domain.event.claim.ClaimLabInfo
import net.ahm.careengine.domain.event.claim.ClaimDiagnosticInfo
import net.ahm.careengine.domain.event.claim.ClaimProcedureInfo
import net.ahm.careengine.domain.event.claim.ClaimDrugInfo
import net.ahm.careengine.bom.clinical.HieMood
import net.ahm.careengine.bom.clinical.HieSource
import net.ahm.careengine.domain.measures.active.ActiveMeasureClassifierBuilder
import net.ahm.careengine.domain.event.adt.BaseAdmissionDischardTransferEvent
import net.ahm.careengine.domain.temporal.ContiguousDays
import net.ahm.careengine.domain.feedback.Feedback.FeedbackReferenceType
import net.ahm.careengine.domain.event.LatestEventAccumulationFunction
import net.ahm.careengine.domain.measures.active.FactLevelMeasureNumerator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureDenominator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder
import net.ahm.careengine.domain.event.drug.DrugDispensingEvent
import net.ahm.careengine.domain.temporal.Span
import net.ahm.careengine.domain.temporal.Temporal
import net.ahm.careengine.domain.temporal.ContiguousDaysExpressable
import net.ahm.careengine.domain.fact.ClassifiedFact

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months27BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
global java.util.Date months6BeforeMeasurementEndDate
global net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder factLevelMeasureBuilder
global java.util.Date months3BeforeMeasurementEndDate
global java.util.Date months1BeforeMeasurementEndDate
global java.util.Date years3BeforeMeasurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureClassifierBuilder classifierBuilder

















rule "AM189_DENOM"
	dialect "mvel"
	when
		 ActiveMeasuresMemberInfo( ageAtMeasurementEndDate >= 18 )
	then
		FactLevelMeasureDenominator flmDenominator= factLevelMeasureBuilder.newFactLevelMeasureDenominator(189); insert(flmDenominator)
end


rule "AM189_NUM_EXCL_PROC_9127_9128_9129"
	dialect "mvel"
	when
		$fln : FactLevelMeasureNumerator( measureId == 189 , $primaryFact : primaryFact != null )
		ProcedureEvent( $procDates : contiguousDays != null ) from $primaryFact
		ProcedureEvent( elements contains 9127  || contains 9128  || contains 9129 , eval( contiguousDays.intersectsButNotAdjacent($procDates) ))
	then
		$fln.setExcludedFromNumerator( true );
end


rule "AM189_NUM_EXCL_INPT_VISIT_AFTER_ED_WITHIN_1_DAY"
	dialect "mvel"
	when
		 $fln : FactLevelMeasureNumerator( measureId == 189 , $primaryFact : primaryFact != null )
		 ProcedureEvent( claimInfo != null , $claimHeaderID : claimInfo.claimHeaderSkey != null , $procDates : contiguousDays != null ) from $primaryFact
		 BaseAdmissionDischardTransferEvent( factId == $claimHeaderID , $EDendDate : rawEndDate != null , rawEndDate <= measurementEndDate , rawEndDate >= months12BeforeMeasurementEndDate , eval( contiguousDays.intersectsButNotAdjacent($procDates) ))
		$1dayAfterEDdate : java.util.Date() from GlobalFunctions.getLaterDate($EDendDate, 1, DateTimeUnit.DAY)
		 BaseAdmissionDischardTransferEvent( startDate <= ( $1dayAfterEDdate ) , startDate <= measurementEndDate , startDate >= ( $EDendDate ) , relatedProcedureEventElements contains 8927 )
	then
		 $fln.setExcludedFromNumerator( true );
end


rule "AM189_NUM_EXCL_PRINCIPAL_DX_9126"
	dialect "mvel"
	when
		$fln : FactLevelMeasureNumerator( measureId == 189 , $primaryFact : primaryFact != null )
		ProcedureEvent( claimInfo != null , $claimHeaderID : claimInfo.claimHeaderSkey != null , $procDates : contiguousDays != null ) from $primaryFact
		BaseAdmissionDischardTransferEvent( factId == $claimHeaderID , $EDendDate : rawEndDate != null , rawEndDate <= measurementEndDate , rawEndDate >= months12BeforeMeasurementEndDate , principalDiagnosisElements contains 9126 , eval( contiguousDays.intersectsButNotAdjacent($procDates) ))
	then
		$fln.setExcludedFromNumerator( true );
end


rule "AM189_NUM"
	dialect "mvel"
	when
		 denom : FactLevelMeasureDenominator( measureId == 189 )
		 ClassifiedFact( classifier != null , classifier.id == 159  || == 171 , fact : fact != null )
	then
		FactLevelMeasureNumerator flmNumerator = denom.createFactLevelMeasureNumeratorWithPrimaryFact(fact); insert(flmNumerator);
end






