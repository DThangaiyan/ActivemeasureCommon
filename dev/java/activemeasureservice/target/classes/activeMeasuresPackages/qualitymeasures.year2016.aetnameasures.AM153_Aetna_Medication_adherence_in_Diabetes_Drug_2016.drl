package net.ahm.activemeasure.qualitymeasures.year2016.aetnameasures.AM153_Aetna_Medication_adherence_in_Diabetes_Drug_2016

import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.member.GenderSelection
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import net.ahm.careengine.domain.member.Gender
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.ruleengine.DateTimeUnit
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.event.CodifiedEvent
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.domain.classifier.Classifier
import net.ahm.careengine.domain.classifier.ClassifierBuilder
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.util.CEDateUtil
import net.ahm.careengine.util.Month
import net.ahm.careengine.domain.temporal.ContiguousDaysExpressable
import net.ahm.careengine.domain.temporal.ContiguousDays

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months27BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
global java.util.Date months6BeforeMeasurementEndDate
global java.util.Date years3BeforeMeasurementEndDate













rule "AM153_DENOM_EXCL"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 153 )
		 DrugEvent( elements contains 9113 , startDate <= ( $am.getAlternateEndDate() ) , startDate >= ( $am.getAlternateStartDate() ) , claim == true )
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM153_NUM_PDC"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 153 )
		 $drugCollection : java.util.Collection( empty == false ) from collect ( DrugEvent( elements contains 9114 , startDate <= ( $am.getAlternateEndDate() ) , startDate >= ( $am.getAlternateStartDate() ) , claim == true )) 
		net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext(); java.lang.Number(intValue >=  80) from (GlobalFunctions.calculatePdcForTreatmentPeriod($drugCollection,$am.getAlternateStartDate(),$am.getAlternateEndDate()))
	then
		$am.setInNumerator(true)
end


rule "AM153_DENOM_FIRST_DRUG_9114"
	dialect "mvel"
	when
		 ActiveMeasuresMemberInfo( ageAtMeasurementEndDate >= 18 , gender != null , $dayBeforeDeceasedDate : dayBeforeDeceasedDate)
		$intakeStartDate : java.util.Date() from GlobalFunctions.startDayOfRangeEndingOn(measurementEndDate, 1, DateTimeUnit.YEAR)
		$intakeEndDate : java.util.Date() from GlobalFunctions.getEarlierDate(measurementEndDate, 3, DateTimeUnit.MONTH)
		 $firstDrug : DrugEvent( $treatmentStartDate : startDate != null ) from accumulate ( $drugCollection : DrugEvent( elements contains 9114 , startDate <= ( $intakeEndDate )  && <= ( measurementEndDate ) , startDate >= ( $intakeStartDate ) , claim == true ),
			firstEventFromStartDate($drugCollection)) 
		MemberInfo ( $initialDays1 : pharmacyEnrollmentDays  ); $earliestLastEnrollmentDate : java.util.Date() from GlobalFunctions.getEarliestAfterIndexDate( $initialDays1, $firstDrug.getContiguousDays() )
		$treatmentEndDate : java.util.Date() from GlobalFunctions.getEarliestDate( measurementEndDate, $earliestLastEnrollmentDate,$dayBeforeDeceasedDate )
		MemberInfo ( $initialGapDays3 : pharmacyEnrollmentGapDays ); java.util.Collection( size ==  0 ) from collect ( ContiguousDays( durationInDays >=  1) from GlobalFunctions.filterWholeDays( $initialGapDays3, $treatmentStartDate, $treatmentEndDate ) )
		 java.util.Collection( size >= 2 ) from collect ( DrugEvent( elements contains 9114 , startDate <= ( $treatmentEndDate )  && <= ( measurementEndDate ) , startDate >= ( $treatmentStartDate ) , claim == true )) 
	then
		ActiveMeasure mam = activeMeasureBuilder.newActiveMeasureWithAlternateStartAndEndDate(153 , $treatmentStartDate , $treatmentEndDate); insert(mam)
end










