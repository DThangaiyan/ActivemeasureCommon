package net.ahm.activemeasure.qualitymeasures.year2016.lowValueMeasures.AM178_Carotid_endarterectomy_in_asymptomatic_patients_Low_Value_2016

import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import net.ahm.careengine.domain.member.Gender
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.bom.clinical.HieMood
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.ruleengine.DateTimeUnit
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.domain.event.adt.BaseAdmissionDischardTransferEvent
import org.joda.time.LocalDate
import net.ahm.careengine.domain.temporal.ContiguousDays
import net.ahm.careengine.domain.measures.active.FactLevelMeasureNumerator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureDenominator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder
import net.ahm.careengine.domain.classifier.Classifier

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months3BeforeMeasurementEndDate
global java.util.Date months1BeforeMeasurementEndDate
global java.util.Date measurementStartDate
global net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder factLevelMeasureBuilder




















rule "AM178_DENOM"
	salience 100
	dialect "mvel"
	when
		 $am : ActiveMeasuresMemberInfo( gender != null , ageAtMeasurementEndDate >= 18 )
		 ProcedureEvent( elements contains 9381 , startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate )
	then
		ActiveMeasure mam = activeMeasureBuilder.newActiveMeasure(178); insert(mam)
end


rule "AM178_DENOM_EXCL"
	dialect "mvel"
	when
		$am : ActiveMeasure(measureId == 178)
		 DiagnosticEvent( elements contains 9377 , startDate <= measurementEndDate )
	then
		$am.setExcludedFromDenominator(true)
end


rule "AM178_NUM_OUTPAT"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 178 )
		 $proc1 : java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 1921 , startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate )) 
		 $proc2 : java.util.Collection( empty == false ) from collect ( ProcedureEvent( elements contains 9384 , startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate )) 
net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext(); 		overlap : java.util.Collection(size >=  1) from collect (OverlappedEvents() from(GlobalFunctions.getOverlappedEvents($proc1, 0, DateTimeUnit.DAY, true, 1,DateTimeUnit.DAY, GlobalFunctions.startDayOfRangeEndingOn(measurementEndDate, 1, DateTimeUnit.YEAR), measurementEndDate, $proc2)))
	then
		$am.setInNumerator(true)
end


rule "AM178_NUM_NO_ED_INPAT_VISIT"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 178 )
		 ProcedureEvent( elements contains 1921 , $procDate : startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate , $imagingTest : contiguousDays != null )
		$14DaysBeforeTest : java.util.Date() from GlobalFunctions.getEarlierDate($procDate, 14, DateTimeUnit.DAY)
		 not (ProcedureEvent( elements contains 9388 , startDate <= $procDate , startDate >= ( $14DaysBeforeTest ) )) 
		 not (ProcedureEvent( elements contains 9389 , startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate , eval( contiguousDays.intersectsButNotAdjacent($imagingTest) ))) 
	then
		$am.setInNumerator(true)
end


