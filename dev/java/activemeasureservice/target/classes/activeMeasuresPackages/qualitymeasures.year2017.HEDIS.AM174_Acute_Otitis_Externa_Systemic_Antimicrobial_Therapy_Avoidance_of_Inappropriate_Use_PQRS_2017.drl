package net.ahm.activemeasure.qualitymeasures.year2017.HEDIS.AM174_Acute_Otitis_Externa_Systemic_Antimicrobial_Therapy_Avoidance_of_Inappropriate_Use_PQRS_2017

import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import net.ahm.careengine.domain.member.Gender
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.bom.clinical.HieMood
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.ruleengine.DateTimeUnit
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.domain.event.adt.BaseAdmissionDischardTransferEvent
import org.joda.time.LocalDate
import net.ahm.careengine.domain.temporal.ContiguousDays
import net.ahm.careengine.domain.measures.active.FactLevelMeasureNumerator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureDenominator
import net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder
import net.ahm.careengine.domain.classifier.Classifier

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months3BeforeMeasurementEndDate
global java.util.Date months1BeforeMeasurementEndDate
global java.util.Date measurementStartDate
global net.ahm.careengine.domain.measures.active.FactLevelMeasureBuilder factLevelMeasureBuilder




















rule "AM174_DENOM"
	dialect "mvel"
	when
		 DiagnosticEvent( elements contains 8357 , $dxDates : contiguousDays != null , $encounterDate : startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate )
		 ProcedureEvent( elements contains 8356 , startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate , contiguousDays != null , eval( contiguousDays.intersectsButNotAdjacent( $dxDates) ))
		$30daysAfterDx : java.util.Date() from GlobalFunctions.getLaterDate($encounterDate, 30, DateTimeUnit.DAY)
		 not (DrugEvent( elements contains 4849 , startDate >= ( $encounterDate ) , startDate <= ( $30daysAfterDx )  && <= measurementEndDate )) 
		$2yearPriorEncounter : java.util.Date() from GlobalFunctions.getEarlierDate($encounterDate, 2, DateTimeUnit.YEAR)
		 ActiveMeasuresMemberInfo( birthDate <= ( $2yearPriorEncounter ) )
	then
		ActiveMeasure mam = activeMeasureBuilder.newActiveMeasure(174); insert(mam)
end


rule "AM174_NUM_PROC_8358"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 174 )
		 ProcedureEvent( startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate , elements contains 8358 )
	then
		$am.setInNumerator(true)
end


rule "AM174_NUM_PROC_8359"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 174 )
		 ProcedureEvent( startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate , elements contains 8359 )
	then
		$am.setInNumerator(true)
end


rule "AM174_DENOM_EXCLUSION"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 174 )
		 ProcedureEvent( startDate <= measurementEndDate , startDate >= months12BeforeMeasurementEndDate , elements contains 9427 )
	then
		$am.setExcludedFromDenominator(true)
end


