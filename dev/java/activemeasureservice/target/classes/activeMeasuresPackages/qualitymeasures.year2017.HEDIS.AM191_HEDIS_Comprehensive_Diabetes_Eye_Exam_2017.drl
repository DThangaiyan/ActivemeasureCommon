package net.ahm.activemeasure.qualitymeasures.year2017.HEDIS.AM191_HEDIS_Comprehensive_Diabetes_Eye_Exam_2017

import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.member.GenderSelection
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import net.ahm.careengine.domain.member.Gender
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.ruleengine.DateTimeUnit
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.event.CodifiedEvent
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.domain.classifier.Classifier
import net.ahm.careengine.domain.classifier.ClassifierBuilder
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.util.CEDateUtil
import net.ahm.careengine.util.Month
import net.ahm.careengine.domain.temporal.ContiguousDaysExpressable
import net.ahm.careengine.domain.temporal.ContiguousDays
import net.ahm.careengine.domain.fact.ClassifiedFact
import net.ahm.careengine.domain.event.adt.BaseAdmissionDischardTransferEvent
import net.ahm.careengine.domain.event.claim.ClaimLabResultInfo
import net.ahm.careengine.domain.event.claim.ClaimBaseInfo
import net.ahm.careengine.domain.event.claim.ClaimLabInfo
import net.ahm.careengine.domain.event.claim.ClaimDiagnosticInfo
import net.ahm.careengine.domain.event.claim.ClaimProcedureInfo
import net.ahm.careengine.domain.event.claim.ClaimDrugInfo

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months27BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
global java.util.Date months6BeforeMeasurementEndDate
global java.util.Date years3BeforeMeasurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureClassifierBuilder classifierBuilder























rule "AM191_DENOM_EYE_EXAM_HOSP_2_YRS_OT_5869_5868"
	dialect "mvel"
	when
		 ActiveMeasuresMemberInfo( ageAtMeasurementEndDate >= 18 , ageAtMeasurementEndDate <= 75 )
		 Classifier( id == 26 )
	then
		ActiveMeasure mam = activeMeasureBuilder.newActiveMeasure(191); insert(mam)
end


rule "AM191_DENOM_DIABETES_OFFICE_ED_OR_NONACUTE_INPT_VIST_WITHIN_2_YR_2_OT_8786_5868"
	dialect "mvel"
	when
		 ActiveMeasuresMemberInfo( ageAtMeasurementEndDate >= 18 , ageAtMeasurementEndDate <= 75 )
		 Classifier( id == 27 )
	then
		ActiveMeasure mam = activeMeasureBuilder.newActiveMeasure(191); insert(mam)
end


rule "AM191_DENOM_DM_MEDS_REFILL_2_YRS_DRUG_5864"
	dialect "mvel"
	when
		 ActiveMeasuresMemberInfo( ageAtMeasurementEndDate >= 18 , ageAtMeasurementEndDate <= 75 )
		 DrugEvent( elements contains 5864 , endDate <= measurementEndDate , endDate >= months24BeforeMeasurementEndDate )
	then
		ActiveMeasure mam = activeMeasureBuilder.newActiveMeasure(191); insert(mam)
end


rule "AM191_NUM_DIAB_EYE_EXAM_8030"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 191 )
		 ProcedureEvent( elements contains 8030 , endDate <= measurementEndDate , endDate >= months12BeforeMeasurementEndDate )
	then
		$am.setInNumerator(true)
end


rule "AM191_NUM_HEDIS_DIABETIC_RETINAL_SCREEN_PROC_6180_SPLTY"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 191 )
		 ProcedureEvent( elements contains 6180 , careProviderSpecialtyGroupCode == "SPECIALTYGRP_OPHTHA"  || == "SPECIALTYGRP_OPTOME" , endDate >= months12BeforeMeasurementEndDate , endDate <= measurementEndDate )
	then
		$am.setInNumerator(true)
end


rule "AM191_NUM_HEIDS_EYE_EXAM_PROC_8606"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 191 )
		 $pe : ProcedureEvent( elements contains 8606 , endDate >= months12BeforeMeasurementEndDate , endDate <= measurementEndDate )
	then
		$am.setInNumerator(true)
end


rule "AM191_NUM_OVERLAP_PROC_6180_8606"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 191 )
		 Classifier( id == 157  || == 192 )
	then
		$am.setInNumerator(true)
end


rule "AM191_NUM_OVERLAP_PROC_8030_8606"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 191 )
		 Classifier( id == 158 )
	then
		$am.setInNumerator(true)
end




rule "AM191_NUM_HEDIS_DIABETIC_RETINAL_SCREEN_PROC_6180_SPLTY_AETNA_CUSTOM"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 191 )
		 ProcedureEvent( elements contains 6180 , endDate >= months12BeforeMeasurementEndDate , endDate <= measurementEndDate , customCareProviderSpecialtyGroupCode == "O"  || == "OP" )
	then
		$am.setInNumerator(true)
end


rule "LABEL_OVERLAP_PROC_6180_8606_IN_PRIOR_YR_AETNA_CUSTOM_CLASSIFIER_192"
	salience 100
	dialect "mvel"
	when
		 $secEvent1 : java.util.Collection( ) from collect ( ProcedureEvent( elements contains 6180 , endDate >= months24BeforeMeasurementEndDate , endDate < months12BeforeMeasurementEndDate , customCareProviderSpecialtyGroupCode == "OP"  || == "O" )) 
		 $secEvent2 : java.util.Collection( ) from collect ( ProcedureEvent( elements contains 8606 , endDate >= months24BeforeMeasurementEndDate , endDate < months12BeforeMeasurementEndDate )) 
		overlapname : java.util.Collection(size >=  1) from collect (OverlappedEvents() from(GlobalFunctions.getOverlappedEvents($secEvent1, 0, DateTimeUnit.DAY, true, 1,DateTimeUnit.DAY, GlobalFunctions.startDayOfRangeEndingOn(measurementEndDate, 2, DateTimeUnit.YEAR), measurementEndDate, $secEvent2)))
	then
		Classifier classifier = classifierBuilder.getClassifierForQualityMeasure(192); insert(classifier)
end


