package net.ahm.activemeasure.qualitymeasures.year2017.HEDIS.AM208_Use_of_High_Risk_Medications_in_the_Elderly_2_Medications_2017

import net.ahm.careengine.domain.measures.active.ActiveMeasure
import net.ahm.careengine.domain.member.ActiveMeasuresMemberInfo
import net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext
import net.ahm.careengine.domain.event.lab.LabEvent
import net.ahm.careengine.domain.event.lab.LabResultEvent
import net.ahm.careengine.domain.event.proc.ProcedureEvent
import net.ahm.careengine.domain.event.diag.DiagnosticEvent
import net.ahm.careengine.domain.measures.active.impl.MemberActiveMeasure
import net.ahm.careengine.domain.event.drug.DrugEvent
import net.ahm.careengine.util.GlobalFunctions
import net.ahm.careengine.service.activemeasure.ActiveMeasureCommandOutputIF
import java.util.Collection
import java.util.Date
import net.ahm.careengine.domain.feedback.Feedback
import net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder
import net.ahm.careengine.domain.event.claim.ClaimHeader
import net.ahm.careengine.domain.event.clinical.HieEncounter
import net.ahm.careengine.event.adt.model.DischargeDispositionStatus
import net.ahm.careengine.domain.event.pdd.PatientDerivedEvent
import net.ahm.careengine.ruleengine.DroolEditor
import net.ahm.careengine.domain.event.Event
import net.ahm.careengine.ruleengine.DateTimeUnit
import net.ahm.careengine.util.OverlappedEvents
import net.ahm.careengine.domain.classifier.Classifier
import net.ahm.careengine.domain.classifier.ClassifierBuilder
import net.ahm.careengine.domain.measures.active.ActiveMeasureClassifierBuilder
import net.ahm.careengine.domain.event.CodifiedEvent
import net.ahm.careengine.domain.member.MemberInfo
import net.ahm.careengine.domain.member.GenderSelection
import net.ahm.careengine.domain.member.Gender
import net.ahm.careengine.util.CEDateUtil
import net.ahm.careengine.domain.temporal.TemporalUtil
import net.ahm.careengine.util.Month
import net.ahm.careengine.domain.event.adt.BaseAdmissionDischardTransferEvent
import net.ahm.careengine.domain.event.drug.DrugDispensingEvent
import net.ahm.careengine.domain.temporal.ContiguousDaysExpressable
import net.ahm.careengine.domain.temporal.ContiguousDays
import net.ahm.careengine.domain.fact.ClassifiedFact

global java.util.Date measurementEndDate
global net.ahm.careengine.domain.measures.active.ActiveMeasureClassifierBuilder classifierBuilder
global net.ahm.careengine.domain.measures.active.ActiveMeasureBuilder activeMeasureBuilder
global java.util.Date months12BeforeMeasurementEndDate
global java.util.Date months6BeforeMeasurementEndDate
global java.util.Date months24BeforeMeasurementEndDate
global java.util.Date months27BeforeMeasurementEndDate
global java.util.Date years10BeforeMeasurementEndDate
global java.util.Date years5BeforeMeasurementEndDate
global java.util.Date years3BeforeMeasurementEndDate



























rule "AM208_DENOM"
	dialect "mvel"
	when
		 ActiveMeasuresMemberInfo( gender != null , ageAtMeasurementEndDate >= 66 )
	then
		ActiveMeasure mam = activeMeasureBuilder.newActiveMeasure(208); insert(mam)
end






rule "AM208_NUM_TWO_DRUG_9013"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 208 )
		 collections : java.util.Collection( size >= 2 ) from collect ( DrugEvent( elements contains 9013 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
		java.util.Collection(size >=  2) from collect (Event() from(GlobalFunctions.removeTooCloseEvents(collections, 1, DateTimeUnit.DAY)))
	then
		$am.setInNumerator(true)
end


rule "AM208_NUM_TWO_DRUG_9014"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 208 )
		 collections : java.util.Collection( size >= 2 ) from collect ( DrugEvent( elements contains 9014 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
		java.util.Collection(size >=  2) from collect (Event() from(GlobalFunctions.removeTooCloseEvents(collections, 1, DateTimeUnit.DAY)))
		net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext(); java.lang.Number(intValue >=  91) from (GlobalFunctions.getTotalDaysSupplyOfDrugsWithoutLossToEnd(collections,months12BeforeMeasurementEndDate,measurementEndDate))
	then
		$am.setInNumerator(true)
end


rule "AM208_NUM_TWO_DRUG_9075"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 208 )
		 collections : java.util.Collection( size >= 2 ) from collect ( DrugEvent( elements contains 9075 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate , avgDailyDosageInMg > 0.125 )) 
		java.util.Collection(size >=  2) from collect (Event() from(GlobalFunctions.removeTooCloseEvents(collections, 1, DateTimeUnit.DAY)))
	then
		$am.setInNumerator(true)
end


rule "AM208_NUM_TWO_DRUG_9073"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 208 )
		 collections : java.util.Collection( size >= 2 ) from collect ( DrugEvent( elements contains 9073 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate , avgDailyDosageInMg > 6 )) 
		java.util.Collection(size >=  2) from collect (Event() from(GlobalFunctions.removeTooCloseEvents(collections, 1, DateTimeUnit.DAY)))
	then
		$am.setInNumerator(true)
end


rule "AM208_NUM_TWO_DRUG_9072"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 208 )
		 collections : java.util.Collection( size >= 2 ) from collect ( DrugEvent( elements contains 9072 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate )) 
		java.util.Collection(size >=  2) from collect (Event() from(GlobalFunctions.removeTooCloseEvents(collections, 1, DateTimeUnit.DAY)))
		net.ahm.careengine.domain.measures.active.ActiveMeasureRuleContext(); java.lang.Number(intValue >=  91) from (GlobalFunctions.getTotalDaysSupplyOfDrugsWithoutLossToEnd(collections,months12BeforeMeasurementEndDate,measurementEndDate))
	then
		$am.setInNumerator(true)
end


rule "AM208_NUM_TWO_DRUG_9015"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 208 )
		 collections : java.util.Collection( size >= 2 ) from collect ( DrugEvent( elements contains 9015 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate , avgDailyDosageInMg > 0.1 )) 
		java.util.Collection(size >=  2) from collect (Event() from(GlobalFunctions.removeTooCloseEvents(collections, 1, DateTimeUnit.DAY)))
	then
		$am.setInNumerator(true)
end


rule "AM208_NUM_TWO_DRUG_9074"
	dialect "mvel"
	when
		 $am : ActiveMeasure( measureId == 208 )
		 collections : java.util.Collection( size >= 2 ) from collect ( DrugEvent( elements contains 9074 , startDate <= measurementEndDate  && >= months12BeforeMeasurementEndDate , avgDailyDosageInMg > 0.125 )) 
		java.util.Collection(size >=  2) from collect (Event() from(GlobalFunctions.removeTooCloseEvents(collections, 1, DateTimeUnit.DAY)))
	then
		$am.setInNumerator(true)
end


